{"cells":[{"cell_type":"markdown","source":["# LangChain for LLM Application Development"],"metadata":{"id":"1Ta2vlXdJgNX"}},{"cell_type":"markdown","metadata":{"id":"WC9InTkjiczp"},"source":["## 1. Introduction\n"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14766,"status":"ok","timestamp":1722893462862,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"},"user_tz":-330},"id":"kRzjtiKzkiK-","outputId":"588fe2af-491c-4a4c-a967-f9e6dc6bcd9c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting openai\n","  Downloading openai-1.39.0-py3-none-any.whl.metadata (22 kB)\n","Collecting tiktoken\n","  Downloading tiktoken-0.7.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (6.6 kB)\n","Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from openai) (3.7.1)\n","Requirement already satisfied: distro<2,>=1.7.0 in /usr/lib/python3/dist-packages (from openai) (1.7.0)\n","Collecting httpx<1,>=0.23.0 (from openai)\n","  Downloading httpx-0.27.0-py3-none-any.whl.metadata (7.2 kB)\n","Requirement already satisfied: pydantic<3,>=1.9.0 in /usr/local/lib/python3.10/dist-packages (from openai) (2.8.2)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from openai) (1.3.1)\n","Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.10/dist-packages (from openai) (4.66.4)\n","Requirement already satisfied: typing-extensions<5,>=4.7 in /usr/local/lib/python3.10/dist-packages (from openai) (4.12.2)\n","Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.10/dist-packages (from tiktoken) (2024.5.15)\n","Requirement already satisfied: requests>=2.26.0 in /usr/local/lib/python3.10/dist-packages (from tiktoken) (2.31.0)\n","Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (3.7)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (1.2.2)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->openai) (2024.7.4)\n","Collecting httpcore==1.* (from httpx<1,>=0.23.0->openai)\n","  Downloading httpcore-1.0.5-py3-none-any.whl.metadata (20 kB)\n","Collecting h11<0.15,>=0.13 (from httpcore==1.*->httpx<1,>=0.23.0->openai)\n","  Downloading h11-0.14.0-py3-none-any.whl.metadata (8.2 kB)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1.9.0->openai) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1.9.0->openai) (2.20.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26.0->tiktoken) (3.3.2)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26.0->tiktoken) (2.0.7)\n","Downloading openai-1.39.0-py3-none-any.whl (336 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m336.7/336.7 kB\u001b[0m \u001b[31m13.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading tiktoken-0.7.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m19.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading httpx-0.27.0-py3-none-any.whl (75 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.6/75.6 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading httpcore-1.0.5-py3-none-any.whl (77 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m77.9/77.9 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading h11-0.14.0-py3-none-any.whl (58 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: h11, tiktoken, httpcore, httpx, openai\n","Successfully installed h11-0.14.0 httpcore-1.0.5 httpx-0.27.0 openai-1.39.0 tiktoken-0.7.0\n"]}],"source":["!pip install openai tiktoken"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4386,"status":"ok","timestamp":1722893642117,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"},"user_tz":-330},"id":"VxGJPOoVhmuY","outputId":"e580b443-907e-40cb-ac0a-294bff4455dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["import os\n","import openai\n","import tiktoken\n","\n","# Mount Google Drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# Path to the file containing the API key\n","key_file_path = '/content/drive/MyDrive/Confidential/Keys/openai.key'\n","\n","# Read the API key from the file\n","with open(key_file_path, 'r') as file:\n","    api_key = file.read().strip()\n","\n","client = openai.OpenAI(api_key = api_key)\n","\n","\n","# account for deprecation of LLM model\n","import datetime\n","# Get the current date\n","current_date = datetime.datetime.now().date()\n","\n","# Define the date after which the model should be set to \"gpt-3.5-turbo\"\n","target_date = datetime.date(2024, 6, 12)\n","\n","# Set the model variable based on the current date\n","if current_date > target_date:\n","    llm_model = \"gpt-3.5-turbo\"\n","else:\n","    llm_model = \"gpt-3.5-turbo-0301\"\n","\n","def get_completion(prompt, model=llm_model,temperature=0):\n","    messages = [{\"role\": \"user\", \"content\": prompt}]\n","    response = client.chat.completions.create(\n","        model=model,\n","        messages=messages,\n","        temperature=temperature\n","    )\n","    return response.choices[0].message.content\n","\n","def get_completion_from_messages(messages, model=\"gpt-3.5-turbo\", temperature=0):\n","    response = client.chat.completions.create(\n","        model=model,\n","        messages=messages,\n","        temperature=temperature, # this is the degree of randomness of the model's output\n","    )\n","#     print(str(response.choices[0].message))\n","    return response.choices[0].message.content\n","\n"]},{"cell_type":"code","source":["get_completion(\"What is 1+1?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"-JHGmSGwLmUL","executionInfo":{"status":"ok","timestamp":1722893645741,"user_tz":-330,"elapsed":530,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"d8145e76-19fa-4f7b-bee8-50ac2c709558"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1+1 equals 2.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["customer_email = \"\"\"\n","Arrr, I be fuming that me blender lid \\\n","flew off and splattered me kitchen walls \\\n","with smoothie! And to make matters worse,\\\n","the warranty don't cover the cost of \\\n","cleaning up me kitchen. I need yer help \\\n","right now, matey!\n","\"\"\""],"metadata":{"id":"sXHwvO9_LoQz","executionInfo":{"status":"ok","timestamp":1722893646425,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["style = \"\"\"American English \\\n","in a calm and respectful tone\n","\"\"\""],"metadata":{"id":"Vnnfr83tLp2o","executionInfo":{"status":"ok","timestamp":1722893647208,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["prompt = f\"\"\"Translate the text \\\n","that is delimited by triple backticks\n","into a style that is {style}.\n","text: ```{customer_email}```\n","\"\"\"\n","\n","print(prompt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ixHXvjGELr-A","executionInfo":{"status":"ok","timestamp":1722893647208,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"4eb60d47-aba9-4cc3-9db1-f359c2d82bae"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Translate the text that is delimited by triple backticks \n","into a style that is American English in a calm and respectful tone\n",".\n","text: ```\n","Arrr, I be fuming that me blender lid flew off and splattered me kitchen walls with smoothie! And to make matters worse,the warranty don't cover the cost of cleaning up me kitchen. I need yer help right now, matey!\n","```\n","\n"]}]},{"cell_type":"code","source":["response = get_completion(prompt)"],"metadata":{"id":"hwblXyJsLt_z","executionInfo":{"status":"ok","timestamp":1722893647884,"user_tz":-330,"elapsed":679,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["response"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"rZzYu_GBLvei","executionInfo":{"status":"ok","timestamp":1722893647885,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"a44fc0f7-abc0-4b30-f167-b2da65f63398"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Ah, I'm really frustrated that my blender lid flew off and splattered my kitchen walls with smoothie! And to make matters worse, the warranty doesn't cover the cost of cleaning up my kitchen. I could really use your help right now, friend.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["## 2. Models, Prompts and Parsers"],"metadata":{"id":"u7Wvu7El3zCD"}},{"cell_type":"code","source":["!pip install --upgrade langchain\n","!pip install --upgrade openai\n","!pip install langchain-community langchain-core\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E7QE1pjwHUqz","executionInfo":{"status":"ok","timestamp":1722893668096,"user_tz":-330,"elapsed":20216,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"7e7d873c-e4b0-4e4a-f00c-3e83b50e7b7a"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting langchain\n","  Downloading langchain-0.2.12-py3-none-any.whl.metadata (7.1 kB)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (6.0.1)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.0.31)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (3.10.0)\n","Requirement already satisfied: async-timeout<5.0.0,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (4.0.3)\n","Collecting langchain-core<0.3.0,>=0.2.27 (from langchain)\n","  Downloading langchain_core-0.2.28-py3-none-any.whl.metadata (6.2 kB)\n","Collecting langchain-text-splitters<0.3.0,>=0.2.0 (from langchain)\n","  Downloading langchain_text_splitters-0.2.2-py3-none-any.whl.metadata (2.1 kB)\n","Collecting langsmith<0.2.0,>=0.1.17 (from langchain)\n","  Downloading langsmith-0.1.96-py3-none-any.whl.metadata (13 kB)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.26.4)\n","Requirement already satisfied: pydantic<3,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.8.2)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.31.0)\n","Collecting tenacity!=8.4.0,<9.0.0,>=8.1.0 (from langchain)\n","  Downloading tenacity-8.5.0-py3-none-any.whl.metadata (1.2 kB)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (2.3.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.9.4)\n","Collecting jsonpatch<2.0,>=1.33 (from langchain-core<0.3.0,>=0.2.27->langchain)\n","  Downloading jsonpatch-1.33-py2.py3-none-any.whl.metadata (3.0 kB)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain) (24.1)\n","Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain) (4.12.2)\n","Collecting orjson<4.0.0,>=3.9.14 (from langsmith<0.2.0,>=0.1.17->langchain)\n","  Downloading orjson-3.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (50 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.4/50.4 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain) (2.20.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2024.7.4)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain) (3.0.3)\n","Collecting jsonpointer>=1.9 (from jsonpatch<2.0,>=1.33->langchain-core<0.3.0,>=0.2.27->langchain)\n","  Downloading jsonpointer-3.0.0-py2.py3-none-any.whl.metadata (2.3 kB)\n","Downloading langchain-0.2.12-py3-none-any.whl (990 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m990.6/990.6 kB\u001b[0m \u001b[31m38.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading langchain_core-0.2.28-py3-none-any.whl (379 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m379.9/379.9 kB\u001b[0m \u001b[31m23.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading langchain_text_splitters-0.2.2-py3-none-any.whl (25 kB)\n","Downloading langsmith-0.1.96-py3-none-any.whl (140 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m140.1/140.1 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading tenacity-8.5.0-py3-none-any.whl (28 kB)\n","Downloading jsonpatch-1.33-py2.py3-none-any.whl (12 kB)\n","Downloading orjson-3.10.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (141 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m141.1/141.1 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading jsonpointer-3.0.0-py2.py3-none-any.whl (7.6 kB)\n","Installing collected packages: tenacity, orjson, jsonpointer, jsonpatch, langsmith, langchain-core, langchain-text-splitters, langchain\n","  Attempting uninstall: tenacity\n","    Found existing installation: tenacity 9.0.0\n","    Uninstalling tenacity-9.0.0:\n","      Successfully uninstalled tenacity-9.0.0\n","Successfully installed jsonpatch-1.33 jsonpointer-3.0.0 langchain-0.2.12 langchain-core-0.2.28 langchain-text-splitters-0.2.2 langsmith-0.1.96 orjson-3.10.6 tenacity-8.5.0\n","Requirement already satisfied: openai in /usr/local/lib/python3.10/dist-packages (1.39.0)\n","Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from openai) (3.7.1)\n","Requirement already satisfied: distro<2,>=1.7.0 in /usr/lib/python3/dist-packages (from openai) (1.7.0)\n","Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from openai) (0.27.0)\n","Requirement already satisfied: pydantic<3,>=1.9.0 in /usr/local/lib/python3.10/dist-packages (from openai) (2.8.2)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from openai) (1.3.1)\n","Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.10/dist-packages (from openai) (4.66.4)\n","Requirement already satisfied: typing-extensions<5,>=4.7 in /usr/local/lib/python3.10/dist-packages (from openai) (4.12.2)\n","Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (3.7)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (1.2.2)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->openai) (2024.7.4)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->openai) (1.0.5)\n","Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->openai) (0.14.0)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1.9.0->openai) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1.9.0->openai) (2.20.1)\n","Collecting langchain-community\n","  Downloading langchain_community-0.2.11-py3-none-any.whl.metadata (2.7 kB)\n","Requirement already satisfied: langchain-core in /usr/local/lib/python3.10/dist-packages (0.2.28)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (6.0.1)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (2.0.31)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (3.10.0)\n","Collecting dataclasses-json<0.7,>=0.5.7 (from langchain-community)\n","  Downloading dataclasses_json-0.6.7-py3-none-any.whl.metadata (25 kB)\n","Requirement already satisfied: langchain<0.3.0,>=0.2.12 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (0.2.12)\n","Requirement already satisfied: langsmith<0.2.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (0.1.96)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (1.26.4)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (2.31.0)\n","Requirement already satisfied: tenacity!=8.4.0,<9.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-community) (8.5.0)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core) (1.33)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core) (24.1)\n","Requirement already satisfied: pydantic<3,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain-core) (2.8.2)\n","Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core) (4.12.2)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (2.3.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (1.9.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community) (4.0.3)\n","Collecting marshmallow<4.0.0,>=3.18.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading marshmallow-3.21.3-py3-none-any.whl.metadata (7.1 kB)\n","Collecting typing-inspect<1,>=0.4.0 (from dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading typing_inspect-0.9.0-py3-none-any.whl.metadata (1.5 kB)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core) (3.0.0)\n","Requirement already satisfied: langchain-text-splitters<0.3.0,>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from langchain<0.3.0,>=0.2.12->langchain-community) (0.2.2)\n","Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.2.0,>=0.1.0->langchain-community) (3.10.6)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain-core) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain-core) (2.20.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community) (2024.7.4)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain-community) (3.0.3)\n","Collecting mypy-extensions>=0.3.0 (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain-community)\n","  Downloading mypy_extensions-1.0.0-py3-none-any.whl.metadata (1.1 kB)\n","Downloading langchain_community-0.2.11-py3-none-any.whl (2.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m59.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dataclasses_json-0.6.7-py3-none-any.whl (28 kB)\n","Downloading marshmallow-3.21.3-py3-none-any.whl (49 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.2/49.2 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n","Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n","Installing collected packages: mypy-extensions, marshmallow, typing-inspect, dataclasses-json, langchain-community\n","Successfully installed dataclasses-json-0.6.7 langchain-community-0.2.11 marshmallow-3.21.3 mypy-extensions-1.0.0 typing-inspect-0.9.0\n"]}]},{"cell_type":"code","source":["from langchain.chat_models import ChatOpenAI"],"metadata":{"id":"jgqrH96vLYwT","executionInfo":{"status":"ok","timestamp":1722893668751,"user_tz":-330,"elapsed":667,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["chat = ChatOpenAI(temperature=0.0, model=llm_model,openai_api_key = api_key)\n","chat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OshOazGEL4fS","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":411,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"cde30ab2-8b06-46d7-842a-c5af10746bff"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py:139: LangChainDeprecationWarning: The class `ChatOpenAI` was deprecated in LangChain 0.0.10 and will be removed in 0.3.0. An updated version of the class exists in the langchain-openai package and should be used instead. To use it run `pip install -U langchain-openai` and import as `from langchain_openai import ChatOpenAI`.\n","  warn_deprecated(\n"]},{"output_type":"execute_result","data":{"text/plain":["ChatOpenAI(client=<openai.resources.chat.completions.Completions object at 0x78fee2cfbfa0>, async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x78fee2d65900>, temperature=0.0, openai_api_key='sk-svcacct-nAxrXp1K3I0wWyZGRQ1yT3BlbkFJuBJgprTlL5sk1rJnyeTe', openai_proxy='')"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["template_string = \"\"\"Translate the text \\\n","that is delimited by triple backticks \\\n","into a style that is {style}. \\\n","text: ```{text}```\n","\"\"\""],"metadata":{"id":"4-sOqQaSL7EY","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["from langchain.prompts import ChatPromptTemplate\n","\n","prompt_template = ChatPromptTemplate.from_template(template_string)\n"],"metadata":{"id":"wf2kshH9MkHa","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["prompt_template.messages[0].prompt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1WGqafUfMkks","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"871e15dc-4856-4d64-d427-daab704c7efc"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PromptTemplate(input_variables=['style', 'text'], template='Translate the text that is delimited by triple backticks into a style that is {style}. text: ```{text}```\\n')"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["prompt_template.messages[0].prompt.input_variables"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"81dKj59vMoT3","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"0356b020-d343-4365-9f14-f9c10ab2f9ae"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['style', 'text']"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["customer_style = \"\"\"American English \\\n","in a calm and respectful tone\n","\"\"\""],"metadata":{"id":"hGqBev88Mpw1","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["customer_email = \"\"\"\n","Arrr, I be fuming that me blender lid \\\n","flew off and splattered me kitchen walls \\\n","with smoothie! And to make matters worse, \\\n","the warranty don't cover the cost of \\\n","cleaning up me kitchen. I need yer help \\\n","right now, matey!\n","\"\"\""],"metadata":{"id":"felYsexEMrN2","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["customer_messages = prompt_template.format_messages(\n","                    style=customer_style,\n","                    text=customer_email)"],"metadata":{"id":"DAXNd2qZMtUu","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["print(type(customer_messages))\n","print(type(customer_messages[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MgodZ3y2Mutc","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"b6fec2a6-8912-44cc-b250-7ccd9bf2a53e"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'list'>\n","<class 'langchain_core.messages.human.HumanMessage'>\n"]}]},{"cell_type":"code","source":["print(customer_messages[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1_WzNBm4MwF0","executionInfo":{"status":"ok","timestamp":1722893669161,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"494085b4-4e4c-4764-fed9-47f384cce578"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["content=\"Translate the text that is delimited by triple backticks into a style that is American English in a calm and respectful tone\\n. text: ```\\nArrr, I be fuming that me blender lid flew off and splattered me kitchen walls with smoothie! And to make matters worse, the warranty don't cover the cost of cleaning up me kitchen. I need yer help right now, matey!\\n```\\n\"\n"]}]},{"cell_type":"code","source":["# Call the LLM to translate to the style of the customer message\n","customer_response = chat(customer_messages)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zB_gwrj0MxVC","executionInfo":{"status":"ok","timestamp":1722893670385,"user_tz":-330,"elapsed":1227,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"14eecd25-ec5e-4a0c-dc42-e5b6a478418c"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py:139: LangChainDeprecationWarning: The method `BaseChatModel.__call__` was deprecated in langchain-core 0.1.7 and will be removed in 0.3.0. Use invoke instead.\n","  warn_deprecated(\n"]}]},{"cell_type":"code","source":["print(customer_response.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YslGAMFzMyky","executionInfo":{"status":"ok","timestamp":1722893670386,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"27c4113f-c521-4a20-fac9-657283a58633"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["I am really frustrated that my blender lid flew off and splattered my kitchen walls with smoothie! And to make matters worse, the warranty doesn't cover the cost of cleaning up my kitchen. I need your help right now, friend.\n"]}]},{"cell_type":"code","source":["service_reply = \"\"\"Hey there customer, \\\n","the warranty does not cover \\\n","cleaning expenses for your kitchen \\\n","because it's your fault that \\\n","you misused your blender \\\n","by forgetting to put the lid on before \\\n","starting the blender. \\\n","Tough luck! See ya!\n","\"\"\""],"metadata":{"id":"5n347wGJMzuo","executionInfo":{"status":"ok","timestamp":1722893671046,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["service_style_pirate = \"\"\"\\\n","a polite tone \\\n","that speaks in English Pirate\\\n","\"\"\""],"metadata":{"id":"I88t-iS-M1N3","executionInfo":{"status":"ok","timestamp":1722893671663,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["service_messages = prompt_template.format_messages(\n","    style=service_style_pirate,\n","    text=service_reply)\n","\n","print(service_messages[0].content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QTCSWiGXM206","executionInfo":{"status":"ok","timestamp":1722893671663,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"3e5b2bf4-7374-45b5-fc6f-9e933ac304b1"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Translate the text that is delimited by triple backticks into a style that is a polite tone that speaks in English Pirate. text: ```Hey there customer, the warranty does not cover cleaning expenses for your kitchen because it's your fault that you misused your blender by forgetting to put the lid on before starting the blender. Tough luck! See ya!\n","```\n","\n"]}]},{"cell_type":"code","source":["service_response = chat(service_messages)\n","print(service_response.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_HMR9W5aM5Mk","executionInfo":{"status":"ok","timestamp":1722893674022,"user_tz":-330,"elapsed":1776,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"e9b66645-52b0-4ad7-bf90-6870757f3d08"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Ahoy there, valued customer! Regrettably, the warranty be not coverin' the cost o' cleanin' yer galley due to yer own negligence in misusin' yer blender. Ye forgot to secure the lid afore startin' the blender, so it be on ye, matey! Fair winds and followin' seas to ye! Farewell!\n"]}]},{"cell_type":"code","source":["{\n","  \"gift\": False,\n","  \"delivery_days\": 5,\n","  \"price_value\": \"pretty affordable!\"\n","}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sX3bVUUxM64d","executionInfo":{"status":"ok","timestamp":1722893674022,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"a43beae8-5845-42dc-e23c-6b2a8b4c6fe0"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'gift': False, 'delivery_days': 5, 'price_value': 'pretty affordable!'}"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["customer_review = \"\"\"\\\n","This leaf blower is pretty amazing.  It has four settings:\\\n","candle blower, gentle breeze, windy city, and tornado. \\\n","It arrived in two days, just in time for my wife's \\\n","anniversary present. \\\n","I think my wife liked it so much she was speechless. \\\n","So far I've been the only one using it, and I've been \\\n","using it every other morning to clear the leaves on our lawn. \\\n","It's slightly more expensive than the other leaf blowers \\\n","out there, but I think it's worth it for the extra features.\n","\"\"\"\n","\n","review_template = \"\"\"\\\n","For the following text, extract the following information:\n","\n","gift: Was the item purchased as a gift for someone else? \\\n","Answer True if yes, False if not or unknown.\n","\n","delivery_days: How many days did it take for the product \\\n","to arrive? If this information is not found, output -1.\n","\n","price_value: Extract any sentences about the value or price,\\\n","and output them as a comma separated Python list.\n","\n","Format the output as JSON with the following keys:\n","gift\n","delivery_days\n","price_value\n","\n","text: {text}\n","\"\"\""],"metadata":{"id":"zhhmprVaM8Nq","executionInfo":{"status":"ok","timestamp":1722893674022,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["from langchain.prompts import ChatPromptTemplate\n","\n","prompt_template = ChatPromptTemplate.from_template(review_template)\n","print(prompt_template)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pBZ54mFtM-vS","executionInfo":{"status":"ok","timestamp":1722893674022,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"bb525ffe-442b-4333-aff2-121cdbf9d145"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["input_variables=['text'] messages=[HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['text'], template='For the following text, extract the following information:\\n\\ngift: Was the item purchased as a gift for someone else? Answer True if yes, False if not or unknown.\\n\\ndelivery_days: How many days did it take for the product to arrive? If this information is not found, output -1.\\n\\nprice_value: Extract any sentences about the value or price,and output them as a comma separated Python list.\\n\\nFormat the output as JSON with the following keys:\\ngift\\ndelivery_days\\nprice_value\\n\\ntext: {text}\\n'))]\n"]}]},{"cell_type":"code","source":["messages = prompt_template.format_messages(text=customer_review)\n","chat = ChatOpenAI(temperature=0.0, model=llm_model,openai_api_key=api_key)\n","response = chat(messages)\n","print(response.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kbIvvL09NAUP","executionInfo":{"status":"ok","timestamp":1722893675763,"user_tz":-330,"elapsed":1742,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"2125bfe9-0455-4a43-8e8e-38ea85bab306"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["{\n","    \"gift\": true,\n","    \"delivery_days\": 2,\n","    \"price_value\": \"It's slightly more expensive than the other leaf blowers out there\"\n","}\n"]}]},{"cell_type":"code","source":["type(response.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rbh8ROfrNBwO","executionInfo":{"status":"ok","timestamp":1722893675763,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"bb581fa4-c0b2-440f-b018-246851faadb6"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# You will get an error by running this line of code\n","# because'gift' is not a dictionary\n","# 'gift' is a string\n","response.content.get('gift')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"id":"kBvMAKQoNDG_","executionInfo":{"status":"error","timestamp":1722893675763,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"3d4fd83a-a7a0-4b80-b7c9-15952206cfb0"},"execution_count":39,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"'str' object has no attribute 'get'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-39-4f8ff06258aa>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# because'gift' is not a dictionary\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# 'gift' is a string\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'gift'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'str' object has no attribute 'get'"]}]},{"cell_type":"code","source":["from langchain.output_parsers import ResponseSchema\n","from langchain.output_parsers import StructuredOutputParser"],"metadata":{"id":"dB-s67sWNHmg","executionInfo":{"status":"aborted","timestamp":1722893675763,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gift_schema = ResponseSchema(name=\"gift\",\n","                             description=\"Was the item purchased\\\n","                             as a gift for someone else? \\\n","                             Answer True if yes,\\\n","                             False if not or unknown.\")\n","delivery_days_schema = ResponseSchema(name=\"delivery_days\",\n","                                      description=\"How many days\\\n","                                      did it take for the product\\\n","                                      to arrive? If this \\\n","                                      information is not found,\\\n","                                      output -1.\")\n","price_value_schema = ResponseSchema(name=\"price_value\",\n","                                    description=\"Extract any\\\n","                                    sentences about the value or \\\n","                                    price, and output them as a \\\n","                                    comma separated Python list.\")\n","\n","response_schemas = [gift_schema,\n","                    delivery_days_schema,\n","                    price_value_schema]"],"metadata":{"id":"Tyaw2DFoNJ69","executionInfo":{"status":"aborted","timestamp":1722893675764,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["output_parser = StructuredOutputParser.from_response_schemas(response_schemas)"],"metadata":{"id":"bLiXw-ctNLp3","executionInfo":{"status":"aborted","timestamp":1722893675764,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","format_instructions = output_parser.get_format_instructions()"],"metadata":{"id":"7ihvT4rpNNDr","executionInfo":{"status":"aborted","timestamp":1722893675764,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(format_instructions)"],"metadata":{"id":"sH7EOBkYNOcD","executionInfo":{"status":"aborted","timestamp":1722893675764,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["review_template_2 = \"\"\"\\\n","For the following text, extract the following information:\n","\n","gift: Was the item purchased as a gift for someone else? \\\n","Answer True if yes, False if not or unknown.\n","\n","delivery_days: How many days did it take for the product\\\n","to arrive? If this information is not found, output -1.\n","\n","price_value: Extract any sentences about the value or price,\\\n","and output them as a comma separated Python list.\n","\n","text: {text}\n","\n","{format_instructions}\n","\"\"\"\n","\n","prompt = ChatPromptTemplate.from_template(template=review_template_2)\n","\n","messages = prompt.format_messages(text=customer_review,\n","                                format_instructions=format_instructions)"],"metadata":{"id":"inqcaTW3NPjS","executionInfo":{"status":"aborted","timestamp":1722893675764,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(messages[0].content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rk390cwjNRAp","executionInfo":{"status":"ok","timestamp":1722893676543,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"1c57c05d-e370-49da-b805-e1a62b2efe4b"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["For the following text, extract the following information:\n","\n","gift: Was the item purchased as a gift for someone else? Answer True if yes, False if not or unknown.\n","\n","delivery_days: How many days did it take for the product to arrive? If this information is not found, output -1.\n","\n","price_value: Extract any sentences about the value or price,and output them as a comma separated Python list.\n","\n","Format the output as JSON with the following keys:\n","gift\n","delivery_days\n","price_value\n","\n","text: This leaf blower is pretty amazing.  It has four settings:candle blower, gentle breeze, windy city, and tornado. It arrived in two days, just in time for my wife's anniversary present. I think my wife liked it so much she was speechless. So far I've been the only one using it, and I've been using it every other morning to clear the leaves on our lawn. It's slightly more expensive than the other leaf blowers out there, but I think it's worth it for the extra features.\n","\n","\n"]}]},{"cell_type":"code","source":["response = chat(messages)"],"metadata":{"id":"zOhQOhTBNSJU","executionInfo":{"status":"ok","timestamp":1722893678662,"user_tz":-330,"elapsed":1598,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["print(response.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DtaJrYoaNT0L","executionInfo":{"status":"ok","timestamp":1722893678662,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"19e69e5b-2ca6-486b-ec4b-77c75c74f407"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["{\n","    \"gift\": true,\n","    \"delivery_days\": 2,\n","    \"price_value\": \"It's slightly more expensive than the other leaf blowers out there, but I think it's worth it for the extra features.\"\n","}\n"]}]},{"cell_type":"code","source":["output_dict = output_parser.parse(response.content)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"kcyHHwxYNVF8","executionInfo":{"status":"error","timestamp":1722893678662,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"24825a44-682a-4bd7-95a3-14997298c163"},"execution_count":43,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'output_parser' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-43-32da6c001f77>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0moutput_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0moutput_parser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontent\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'output_parser' is not defined"]}]},{"cell_type":"code","source":["output_dict"],"metadata":{"id":"Rdn8oKwqNWIk","executionInfo":{"status":"aborted","timestamp":1722893678662,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["type(output_dict)"],"metadata":{"id":"7vqgynuvNXYe","executionInfo":{"status":"aborted","timestamp":1722893678662,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["output_dict.get('delivery_days')"],"metadata":{"id":"odY0bT1LNYrl","executionInfo":{"status":"aborted","timestamp":1722893678662,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 3. Memory"],"metadata":{"id":"mz5p098GOIun"}},{"cell_type":"code","source":["from langchain.chat_models import ChatOpenAI\n","from langchain.chains import ConversationChain\n","from langchain.memory import ConversationBufferMemory\n"],"metadata":{"id":"3c2O2sfmNZ8t","executionInfo":{"status":"ok","timestamp":1722893679228,"user_tz":-330,"elapsed":568,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0.0, model=llm_model,openai_api_key=api_key)\n","memory = ConversationBufferMemory()\n","conversation = ConversationChain(\n","    llm=llm,\n","    memory = memory,\n","    verbose=True\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zb2--7JcSsU0","executionInfo":{"status":"ok","timestamp":1722893679796,"user_tz":-330,"elapsed":570,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"edde954a-50ab-4988-ff47-4e930d65653a"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py:139: LangChainDeprecationWarning: The class `ConversationChain` was deprecated in LangChain 0.2.7 and will be removed in 1.0. Use RunnableWithMessageHistory: https://api.python.langchain.com/en/latest/runnables/langchain_core.runnables.history.RunnableWithMessageHistory.html instead.\n","  warn_deprecated(\n"]}]},{"cell_type":"code","source":["conversation.predict(input=\"Hi, my name is Andrew\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":263},"id":"K8J6Gp_KStkb","executionInfo":{"status":"ok","timestamp":1722893680386,"user_tz":-330,"elapsed":592,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"36791175-d4c4-440d-ed5b-7f3be2290da5"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new ConversationChain chain...\u001b[0m\n","Prompt after formatting:\n","\u001b[32;1m\u001b[1;3mThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n","\n","Current conversation:\n","\n","Human: Hi, my name is Andrew\n","AI:\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["\"Hello Andrew! It's nice to meet you. How can I assist you today?\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["conversation.predict(input=\"What is 1+1?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"IudWTMF0S1pz","executionInfo":{"status":"ok","timestamp":1722893686055,"user_tz":-330,"elapsed":5671,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"313c0f3a-518c-4f04-93cb-e192a65786cc"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new ConversationChain chain...\u001b[0m\n","Prompt after formatting:\n","\u001b[32;1m\u001b[1;3mThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n","\n","Current conversation:\n","Human: Hi, my name is Andrew\n","AI: Hello Andrew! It's nice to meet you. How can I assist you today?\n","Human: What is 1+1?\n","AI:\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["'1+1 equals 2. Is there anything else you would like to know?'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["conversation.predict(input=\"What is my name?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"BYF1w637S3PK","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":678,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"dd96e0c4-7c83-4e40-9dde-3d0b6cc06e98"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new ConversationChain chain...\u001b[0m\n","Prompt after formatting:\n","\u001b[32;1m\u001b[1;3mThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n","\n","Current conversation:\n","Human: Hi, my name is Andrew\n","AI: Hello Andrew! It's nice to meet you. How can I assist you today?\n","Human: What is 1+1?\n","AI: 1+1 equals 2. Is there anything else you would like to know?\n","Human: What is my name?\n","AI:\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["'Your name is Andrew.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["print(memory.buffer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L9qXapHyS4ZO","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"7c81314a-e009-4b9a-a313-756f2da49225"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: Hi, my name is Andrew\n","AI: Hello Andrew! It's nice to meet you. How can I assist you today?\n","Human: What is 1+1?\n","AI: 1+1 equals 2. Is there anything else you would like to know?\n","Human: What is my name?\n","AI: Your name is Andrew.\n"]}]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LdHFq3B5S5k0","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"9d380e02-f957-42df-9a15-22e986e844b3"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': \"Human: Hi, my name is Andrew\\nAI: Hello Andrew! It's nice to meet you. How can I assist you today?\\nHuman: What is 1+1?\\nAI: 1+1 equals 2. Is there anything else you would like to know?\\nHuman: What is my name?\\nAI: Your name is Andrew.\"}"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["memory = ConversationBufferMemory()"],"metadata":{"id":"x0UgF0vwS_Wt","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["memory.save_context({\"input\": \"Hi\"},\n","                    {\"output\": \"What's up\"})"],"metadata":{"id":"JKoY1PMmTCuo","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["print(memory.buffer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S8yOSuJSTIo6","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"584fbcd6-94af-4aba-b6c2-17e796c667e7"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: Hi\n","AI: What's up\n"]}]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8DeZURESTKru","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"2b25304c-1b46-4bf9-a6ca-e1fa9f568dc3"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': \"Human: Hi\\nAI: What's up\"}"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["memory.save_context({\"input\": \"Not much, just hanging\"},\n","                    {\"output\": \"Cool\"})"],"metadata":{"id":"qtV7YlGCTL1M","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"exEq6UUkTNGC","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"49428dda-4da5-441e-b5d6-71e878296bd6"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': \"Human: Hi\\nAI: What's up\\nHuman: Not much, just hanging\\nAI: Cool\"}"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["# ConversationBufferWindowMemory\n","from langchain.memory import ConversationBufferWindowMemory"],"metadata":{"id":"227el5uXTOuG","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["memory = ConversationBufferWindowMemory(k=1)"],"metadata":{"id":"3ScpTG6RTVNx","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["memory.save_context({\"input\": \"Hi\"},\n","                    {\"output\": \"What's up\"})\n","memory.save_context({\"input\": \"Not much, just hanging\"},\n","                    {\"output\": \"Cool\"})"],"metadata":{"id":"IHTtApZ_TXvC","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xo7Wc216TY6T","executionInfo":{"status":"ok","timestamp":1722893686730,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"98c6cbb7-76f1-46c0-c1cf-5a1ce45b0856"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': 'Human: Not much, just hanging\\nAI: Cool'}"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0.0, model=llm_model,openai_api_key=api_key)\n","memory = ConversationBufferWindowMemory(k=1)\n","conversation = ConversationChain(\n","    llm=llm,\n","    memory = memory,\n","    verbose=False\n",")"],"metadata":{"id":"Kwfu9Ck7TZ82","executionInfo":{"status":"ok","timestamp":1722893687356,"user_tz":-330,"elapsed":628,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["conversation.predict(input=\"Hi, my name is Andrew\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"1bJn7clXTbV1","executionInfo":{"status":"ok","timestamp":1722893687877,"user_tz":-330,"elapsed":523,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"55616cab-e61d-4c2f-fef7-461dcb9d514e"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Hello Andrew! It's nice to meet you. How can I assist you today?\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["conversation.predict(input=\"What is 1+1?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"cG3QKU1dTfqK","executionInfo":{"status":"ok","timestamp":1722893688523,"user_tz":-330,"elapsed":650,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"8d0fa582-5014-4eee-d7b6-fd1dfaafd42e"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1+1 equals 2. Is there anything else you would like to know?'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["conversation.predict(input=\"What is my name?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"VY2adHEYThCh","executionInfo":{"status":"ok","timestamp":1722893689081,"user_tz":-330,"elapsed":562,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"c290584b-5135-4035-fa34-cfffaac77eee"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"I'm sorry, I do not have access to personal information such as your name. Is there anything else you would like to ask?\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["!pip install tiktoken"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dxSWjYYfTmH9","executionInfo":{"status":"ok","timestamp":1722893692537,"user_tz":-330,"elapsed":3458,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"cb9c4729-1acb-441d-c97b-0793285c5768"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: tiktoken in /usr/local/lib/python3.10/dist-packages (0.7.0)\n","Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.10/dist-packages (from tiktoken) (2024.5.15)\n","Requirement already satisfied: requests>=2.26.0 in /usr/local/lib/python3.10/dist-packages (from tiktoken) (2.31.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26.0->tiktoken) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26.0->tiktoken) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26.0->tiktoken) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.26.0->tiktoken) (2024.7.4)\n"]}]},{"cell_type":"code","source":["# ConversationTokenBufferMemory\n","from langchain.memory import ConversationTokenBufferMemory\n","from langchain.llms import OpenAI\n","llm = ChatOpenAI(temperature=0.0, model=llm_model,openai_api_key=api_key)"],"metadata":{"id":"KzkMcb6ETiSL","executionInfo":{"status":"ok","timestamp":1722893692537,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["memory = ConversationTokenBufferMemory(llm=llm, max_token_limit=50)\n","memory.save_context({\"input\": \"AI is what?!\"},\n","                    {\"output\": \"Amazing!\"})\n","memory.save_context({\"input\": \"Backpropagation is what?\"},\n","                    {\"output\": \"Beautiful!\"})\n","memory.save_context({\"input\": \"Chatbots are what?\"},\n","                    {\"output\": \"Charming!\"})"],"metadata":{"id":"mkWtN74sTruL","executionInfo":{"status":"ok","timestamp":1722893693935,"user_tz":-330,"elapsed":1401,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7aMu6rAoTsMp","executionInfo":{"status":"ok","timestamp":1722893693935,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"578c78d9-15d6-4248-f5b3-cc1a7d4ff63e"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': 'AI: Amazing!\\nHuman: Backpropagation is what?\\nAI: Beautiful!\\nHuman: Chatbots are what?\\nAI: Charming!'}"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# Conversation Summary Memory\n","from langchain.memory import ConversationSummaryBufferMemory"],"metadata":{"id":"pSomgIiOTwB7","executionInfo":{"status":"ok","timestamp":1722893693935,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["# create a long string\n","schedule = \"There is a meeting at 8am with your product team. \\\n","You will need your powerpoint presentation prepared. \\\n","9am-12pm have time to work on your LangChain \\\n","project which will go quickly because Langchain is such a powerful tool. \\\n","At Noon, lunch at the italian resturant with a customer who is driving \\\n","from over an hour away to meet you to understand the latest in AI. \\\n","Be sure to bring your laptop to show the latest LLM demo.\"\n","\n","memory = ConversationSummaryBufferMemory(llm=llm, max_token_limit=100)\n","memory.save_context({\"input\": \"Hello\"}, {\"output\": \"What's up\"})\n","memory.save_context({\"input\": \"Not much, just hanging\"},\n","                    {\"output\": \"Cool\"})\n","memory.save_context({\"input\": \"What is on the schedule today?\"},\n","                    {\"output\": f\"{schedule}\"})"],"metadata":{"id":"tyx8nnshT34V","executionInfo":{"status":"ok","timestamp":1722893696892,"user_tz":-330,"elapsed":2959,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZT2KIDkUT5ch","executionInfo":{"status":"ok","timestamp":1722893696892,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"f8379027-7efd-4546-c9c7-1df88a6dec87"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': 'System: The human and AI exchange greetings and discuss the schedule for the day, including a meeting with the product team, work on the LangChain project, and a lunch meeting with a customer interested in AI. The AI provides details on each event and emphasizes the power of LangChain as a tool.'}"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["conversation = ConversationChain(\n","    llm=llm,\n","    memory = memory,\n","    verbose=True\n",")"],"metadata":{"id":"rjChiwt3T7Br","executionInfo":{"status":"ok","timestamp":1722893696893,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["conversation.predict(input=\"What would be a good demo to show?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"GKmha5AUT8uc","executionInfo":{"status":"ok","timestamp":1722893697560,"user_tz":-330,"elapsed":671,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"d7768af2-8091-45aa-9d78-7ae23f5c4b95"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new ConversationChain chain...\u001b[0m\n","Prompt after formatting:\n","\u001b[32;1m\u001b[1;3mThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n","\n","Current conversation:\n","System: The human and AI exchange greetings and discuss the schedule for the day, including a meeting with the product team, work on the LangChain project, and a lunch meeting with a customer interested in AI. The AI provides details on each event and emphasizes the power of LangChain as a tool.\n","Human: What would be a good demo to show?\n","AI:\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["'For the meeting with the product team, a demo showcasing the latest features and updates on the LangChain project would be ideal. This could include a live demonstration of how LangChain streamlines language translation processes, improves accuracy, and increases efficiency. Additionally, highlighting any recent success stories or case studies from satisfied clients could help showcase the real-world impact of LangChain.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["memory.load_memory_variables({})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7YUZTq33T-Hk","executionInfo":{"status":"ok","timestamp":1722893697560,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"06aea23d-12db-4595-f9df-4c8a1d9c47d5"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'history': 'System: The human and AI exchange greetings and discuss the schedule for the day, including a meeting with the product team, work on the LangChain project, and a lunch meeting with a customer interested in AI. The AI provides details on each event and emphasizes the power of LangChain as a tool.\\nHuman: What would be a good demo to show?\\nAI: For the meeting with the product team, a demo showcasing the latest features and updates on the LangChain project would be ideal. This could include a live demonstration of how LangChain streamlines language translation processes, improves accuracy, and increases efficiency. Additionally, highlighting any recent success stories or case studies from satisfied clients could help showcase the real-world impact of LangChain.'}"]},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["## 4. Chains"],"metadata":{"id":"RCCYR-MCULhy"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv('/content/drive/MyDrive/PwC/Colab Notebooks/Files/3.Data.csv')"],"metadata":{"id":"-ek8PEIoULSf","executionInfo":{"status":"ok","timestamp":1722894983141,"user_tz":-330,"elapsed":1195,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":112,"outputs":[]},{"cell_type":"code","source":["df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-TwvVHbRUACr","executionInfo":{"status":"ok","timestamp":1722894984820,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"505805c6-97ef-4e09-f217-41f9fca2fb4f"},"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Product                                             Review\n","0     Queen Size Sheet Set  I ordered a king size set. My only criticism w...\n","1   Waterproof Phone Pouch  I loved the waterproof sac, although the openi...\n","2      Luxury Air Mattress  This mattress had a small hole in the top of i...\n","3           Pillows Insert  This is the best throw pillow fillers on Amazo...\n","4  Milk Frother Handheld\\n   I loved this product. But they only seem to l..."],"text/html":["\n","  <div id=\"df-065a9968-17d0-4738-bafa-b6b3c01bde3e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Product</th>\n","      <th>Review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Queen Size Sheet Set</td>\n","      <td>I ordered a king size set. My only criticism w...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Waterproof Phone Pouch</td>\n","      <td>I loved the waterproof sac, although the openi...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Luxury Air Mattress</td>\n","      <td>This mattress had a small hole in the top of i...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Pillows Insert</td>\n","      <td>This is the best throw pillow fillers on Amazo...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Milk Frother Handheld\\n</td>\n","      <td>I loved this product. But they only seem to l...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-065a9968-17d0-4738-bafa-b6b3c01bde3e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-065a9968-17d0-4738-bafa-b6b3c01bde3e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-065a9968-17d0-4738-bafa-b6b3c01bde3e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-01e0a876-85af-49a2-8f3f-eadaca3d0f5b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01e0a876-85af-49a2-8f3f-eadaca3d0f5b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-01e0a876-85af-49a2-8f3f-eadaca3d0f5b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Product\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Queen Size Sheet Set\",\n          \"Waterproof Phone Pouch\",\n          \"L'Or Espresso Caf\\u00e9\\u00a0\\n\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Review\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"I ordered a king size set. My only criticism would be that I wish seller would offer the king size set with 4 pillowcases. I separately ordered a two pack of pillowcases so I could have a total of four. When I saw the two packages, it looked like the color did not exactly match. Customer service was excellent about sending me two more pillowcases so I would have four that matched. Excellent! For the cost of these sheets, I am satisfied with the characteristics and coolness of the sheets.\",\n          \"I loved the waterproof sac, although the opening was made of a hard plastic. I don\\u2019t know if that would break easily. But I couldn\\u2019t turn my phone on, once it was in the pouch.\",\n          \"Je trouve le go\\u00fbt m\\u00e9diocre. La mousse ne tient pas, c'est bizarre. J'ach\\u00e8te les m\\u00eames dans le commerce et le go\\u00fbt est bien meilleur...\\nVieux lot ou contrefa\\u00e7on !?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["from langchain.chat_models import ChatOpenAI\n","from langchain.prompts import ChatPromptTemplate\n","from langchain.chains import LLMChain"],"metadata":{"id":"xQM2ckkgYp3V","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0.9, model=llm_model,openai_api_key=api_key)"],"metadata":{"id":"ZnByegVeZvms","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":115,"outputs":[]},{"cell_type":"code","source":["prompt = ChatPromptTemplate.from_template(\n","    \"What is the best name to describe \\\n","    a company that makes {product}?\"\n",")"],"metadata":{"id":"Ri2jN2OnZwy2","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":116,"outputs":[]},{"cell_type":"code","source":["chain = LLMChain(llm=llm, prompt=prompt)"],"metadata":{"id":"eBdKO6A3ZyQc","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":117,"outputs":[]},{"cell_type":"code","source":["product = \"Queen Size Sheet Set\"\n","chain.run(product)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"GGFbHBcbZzUM","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"da0e21c3-c459-4d64-a0ce-df7b384eb088"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Royal Comfort Bedding Co.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["### Simple Sequential Chain"],"metadata":{"id":"LBHK3X8rZ_7T"}},{"cell_type":"code","source":["from langchain.chains import SimpleSequentialChain"],"metadata":{"id":"iAD2vJIkZ0hs","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":119,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0.9, model=llm_model,openai_api_key=api_key)\n","\n","# prompt template 1\n","first_prompt = ChatPromptTemplate.from_template(\n","    \"What is the best name to describe \\\n","    a company that makes {product}?\"\n",")\n","\n","# Chain 1\n","chain_one = LLMChain(llm=llm, prompt=first_prompt)"],"metadata":{"id":"4VYMT_dlZ2RE","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":120,"outputs":[]},{"cell_type":"code","source":["# prompt template 2\n","second_prompt = ChatPromptTemplate.from_template(\n","    \"Write a 20 words description for the following \\\n","    company:{company_name}\"\n",")\n","# chain 2\n","chain_two = LLMChain(llm=llm, prompt=second_prompt)"],"metadata":{"id":"6n2id5d_Z3pF","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":121,"outputs":[]},{"cell_type":"code","source":["overall_simple_chain = SimpleSequentialChain(chains=[chain_one, chain_two],\n","                                             verbose=True\n","                                            )"],"metadata":{"id":"QgEfV_kmZ5OW","executionInfo":{"status":"ok","timestamp":1722894984821,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":122,"outputs":[]},{"cell_type":"code","source":["overall_simple_chain.run(product)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":157},"id":"aclkm7Q9Z6rn","executionInfo":{"status":"ok","timestamp":1722894986405,"user_tz":-330,"elapsed":1589,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"a49a0eb3-49bf-42bf-d360-d486338ad211"},"execution_count":123,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new SimpleSequentialChain chain...\u001b[0m\n","\u001b[36;1m\u001b[1;3m\"Royal Comfort Linens\"\u001b[0m\n","\u001b[33;1m\u001b[1;3mRoyal Comfort Linens offers luxurious bedding and bath linens designed to elevate your home decor and provide ultimate comfort.\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["'Royal Comfort Linens offers luxurious bedding and bath linens designed to elevate your home decor and provide ultimate comfort.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":123}]},{"cell_type":"markdown","source":["### SequentialChain"],"metadata":{"id":"OI1QdTH2aNek"}},{"cell_type":"code","source":["from langchain.chains import SequentialChain"],"metadata":{"id":"jRmT5rq4Z7zR","executionInfo":{"status":"ok","timestamp":1722894986405,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":124,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0.9, model=llm_model,openai_api_key=api_key)\n","\n","# prompt template 1: translate to english\n","first_prompt = ChatPromptTemplate.from_template(\n","    \"Translate the following review to english:\"\n","    \"\\n\\n{Review}\"\n",")\n","# chain 1: input= Review and output= English_Review\n","chain_one = LLMChain(llm=llm, prompt=first_prompt,\n","                     output_key=\"English_Review\"\n","                    )\n"],"metadata":{"id":"EJnhuzo-aRNo","executionInfo":{"status":"ok","timestamp":1722894986405,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":125,"outputs":[]},{"cell_type":"code","source":["second_prompt = ChatPromptTemplate.from_template(\n","    \"Can you summarize the following review in 1 sentence:\"\n","    \"\\n\\n{English_Review}\"\n",")\n","# chain 2: input= English_Review and output= summary\n","chain_two = LLMChain(llm=llm, prompt=second_prompt,\n","                     output_key=\"summary\"\n","                    )\n"],"metadata":{"id":"fq2qSNHMaVs-","executionInfo":{"status":"ok","timestamp":1722894986405,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":126,"outputs":[]},{"cell_type":"code","source":["# prompt template 3: translate to english\n","third_prompt = ChatPromptTemplate.from_template(\n","    \"What language is the following review:\\n\\n{Review}\"\n",")\n","# chain 3: input= Review and output= language\n","chain_three = LLMChain(llm=llm, prompt=third_prompt,\n","                       output_key=\"language\"\n","                      )\n"],"metadata":{"id":"CTfB6SBpaXSc","executionInfo":{"status":"ok","timestamp":1722894986405,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":127,"outputs":[]},{"cell_type":"code","source":["\n","# prompt template 4: follow up message\n","fourth_prompt = ChatPromptTemplate.from_template(\n","    \"Write a follow up response to the following \"\n","    \"summary in the specified language:\"\n","    \"\\n\\nSummary: {summary}\\n\\nLanguage: {language}\"\n",")\n","# chain 4: input= summary, language and output= followup_message\n","chain_four = LLMChain(llm=llm, prompt=fourth_prompt,\n","                      output_key=\"followup_message\"\n","                     )\n"],"metadata":{"id":"Q-amibOSaYsc","executionInfo":{"status":"ok","timestamp":1722894986406,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":128,"outputs":[]},{"cell_type":"code","source":["# overall_chain: input= Review\n","# and output= English_Review,summary, followup_message\n","overall_chain = SequentialChain(\n","    chains=[chain_one, chain_two, chain_three, chain_four],\n","    input_variables=[\"Review\"],\n","    output_variables=[\"English_Review\", \"summary\",\"followup_message\"],\n","    verbose=True\n",")"],"metadata":{"id":"2DgkNV6yaaOm","executionInfo":{"status":"ok","timestamp":1722894986406,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":129,"outputs":[]},{"cell_type":"code","source":["review = df.Review[5]\n","overall_chain(review)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R8K1LPC1bbyT","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":5552,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"efafb207-c6df-4314-b635-61e14d33553c"},"execution_count":130,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new SequentialChain chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["{'Review': \"Je trouve le goût médiocre. La mousse ne tient pas, c'est bizarre. J'achète les mêmes dans le commerce et le goût est bien meilleur...\\nVieux lot ou contrefaçon !?\",\n"," 'English_Review': \"I find the taste mediocre. The foam doesn't hold, it's weird. I buy the same ones in stores and the taste is much better...Old batch or counterfeit!?\",\n"," 'summary': 'The reviewer finds the taste of the product mediocre, with poor foam retention, leading them to suspect it may be an old batch or counterfeit.',\n"," 'followup_message': \"Je suis désolé d'apprendre que vous n'avez pas apprécié le goût du produit et que la mousse ne s'est pas bien tenue. Il est possible que vous ayez reçu un lot ancien ou contrefait. Je vous suggère de contacter le fabricant pour clarifier la situation et peut-être obtenir un remplacement. Nous espérons que cette expérience ne vous dissuadera pas d'essayer à nouveau le produit dans le futur.\"}"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["# Router Chain\n","physics_template = \"\"\"You are a very smart physics professor. \\\n","You are great at answering questions about physics in a concise\\\n","and easy to understand manner. \\\n","When you don't know the answer to a question you admit\\\n","that you don't know.\n","\n","Here is a question:\n","{input}\"\"\"\n","\n","\n","math_template = \"\"\"You are a very good mathematician. \\\n","You are great at answering math questions. \\\n","You are so good because you are able to break down \\\n","hard problems into their component parts,\n","answer the component parts, and then put them together\\\n","to answer the broader question.\n","\n","Here is a question:\n","{input}\"\"\"\n","\n","history_template = \"\"\"You are a very good historian. \\\n","You have an excellent knowledge of and understanding of people,\\\n","events and contexts from a range of historical periods. \\\n","You have the ability to think, reflect, debate, discuss and \\\n","evaluate the past. You have a respect for historical evidence\\\n","and the ability to make use of it to support your explanations \\\n","and judgements.\n","\n","Here is a question:\n","{input}\"\"\"\n","\n","\n","computerscience_template = \"\"\" You are a successful computer scientist.\\\n","You have a passion for creativity, collaboration,\\\n","forward-thinking, confidence, strong problem-solving capabilities,\\\n","understanding of theories and algorithms, and excellent communication \\\n","skills. You are great at answering coding questions. \\\n","You are so good because you know how to solve a problem by \\\n","describing the solution in imperative steps \\\n","that a machine can easily interpret and you know how to \\\n","choose a solution that has a good balance between \\\n","time complexity and space complexity.\n","\n","Here is a question:\n","{input}\"\"\""],"metadata":{"id":"-6zWya58ac4C","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":10,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":131,"outputs":[]},{"cell_type":"code","source":["prompt_infos = [\n","    {\n","        \"name\": \"physics\",\n","        \"description\": \"Good for answering questions about physics\",\n","        \"prompt_template\": physics_template\n","    },\n","    {\n","        \"name\": \"math\",\n","        \"description\": \"Good for answering math questions\",\n","        \"prompt_template\": math_template\n","    },\n","    {\n","        \"name\": \"History\",\n","        \"description\": \"Good for answering history questions\",\n","        \"prompt_template\": history_template\n","    },\n","    {\n","        \"name\": \"computer science\",\n","        \"description\": \"Good for answering computer science questions\",\n","        \"prompt_template\": computerscience_template\n","    }\n","]"],"metadata":{"id":"UNEyt0shbh21","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":132,"outputs":[]},{"cell_type":"code","source":["from langchain.chains.router import MultiPromptChain\n","from langchain.chains.router.llm_router import LLMRouterChain,RouterOutputParser\n","from langchain.prompts import PromptTemplate"],"metadata":{"id":"tRZGv-QUbj4K","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":133,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0, model=llm_model,openai_api_key=api_key)"],"metadata":{"id":"Jfqs1iiNblmk","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":134,"outputs":[]},{"cell_type":"code","source":["\n","destination_chains = {}\n","for p_info in prompt_infos:\n","    name = p_info[\"name\"]\n","    prompt_template = p_info[\"prompt_template\"]\n","    prompt = ChatPromptTemplate.from_template(template=prompt_template)\n","    chain = LLMChain(llm=llm, prompt=prompt)\n","    destination_chains[name] = chain\n","\n","destinations = [f\"{p['name']}: {p['description']}\" for p in prompt_infos]\n","destinations_str = \"\\n\".join(destinations)"],"metadata":{"id":"eZTp0pHgbrTK","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":135,"outputs":[]},{"cell_type":"code","source":["default_prompt = ChatPromptTemplate.from_template(\"{input}\")\n","default_chain = LLMChain(llm=llm, prompt=default_prompt)"],"metadata":{"id":"-hLBIJ5Gbrtg","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":136,"outputs":[]},{"cell_type":"code","source":["MULTI_PROMPT_ROUTER_TEMPLATE = \"\"\"Given a raw text input to a \\\n","language model select the model prompt best suited for the input. \\\n","You will be given the names of the available prompts and a \\\n","description of what the prompt is best suited for. \\\n","You may also revise the original input if you think that revising\\\n","it will ultimately lead to a better response from the language model.\n","\n","<< FORMATTING >>\n","Return a markdown code snippet with a JSON object formatted to look like:\n","```json\n","{{{{\n","    \"destination\": string \\ name of the prompt to use or \"DEFAULT\"\n","    \"next_inputs\": string \\ a potentially modified version of the original input\n","}}}}\n","```\n","\n","REMEMBER: \"destination\" MUST be one of the candidate prompt \\\n","names specified below OR it can be \"DEFAULT\" if the input is not\\\n","well suited for any of the candidate prompts.\n","REMEMBER: \"next_inputs\" can just be the original input \\\n","if you don't think any modifications are needed.\n","\n","<< CANDIDATE PROMPTS >>\n","{destinations}\n","\n","<< INPUT >>\n","{{input}}\n","\n","<< OUTPUT (remember to include the ```json)>>\"\"\""],"metadata":{"id":"Lg1i91MFbtWW","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":137,"outputs":[]},{"cell_type":"code","source":["router_template = MULTI_PROMPT_ROUTER_TEMPLATE.format(\n","    destinations=destinations_str\n",")\n","router_prompt = PromptTemplate(\n","    template=router_template,\n","    input_variables=[\"input\"],\n","    output_parser=RouterOutputParser(),\n",")\n","\n","router_chain = LLMRouterChain.from_llm(llm, router_prompt)"],"metadata":{"id":"F_j7i5Srb3nW","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":138,"outputs":[]},{"cell_type":"code","source":["chain = MultiPromptChain(router_chain=router_chain,\n","                         destination_chains=destination_chains,\n","                         default_chain=default_chain, verbose=True\n","                        )"],"metadata":{"id":"Q1W27aFJb5jz","executionInfo":{"status":"ok","timestamp":1722894991952,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":139,"outputs":[]},{"cell_type":"code","source":["chain.run(\"What is black body radiation?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"-CPuyqUYb69a","executionInfo":{"status":"ok","timestamp":1722894994891,"user_tz":-330,"elapsed":2945,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"8c1c710f-26d8-42ef-d10a-0e9c9b0958bc"},"execution_count":140,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new MultiPromptChain chain...\u001b[0m\n","physics: {'input': 'What is black body radiation?'}\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["\"Black body radiation refers to the electromagnetic radiation emitted by a perfect black body, which is an idealized physical body that absorbs all incident electromagnetic radiation. The radiation emitted by a black body depends only on its temperature and follows a specific distribution known as Planck's law. This radiation is characterized by a continuous spectrum of wavelengths and intensities, with the peak intensity shifting to shorter wavelengths as the temperature of the black body increases. Black body radiation plays a key role in understanding concepts such as thermal radiation and the quantization of energy in quantum mechanics.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["chain.run(\"what is 2 + 2\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":122},"id":"YJXuUoorb9u2","executionInfo":{"status":"ok","timestamp":1722894996106,"user_tz":-330,"elapsed":1233,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"417ab1ae-d4b5-4de6-e493-2abd55b58e78"},"execution_count":141,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new MultiPromptChain chain...\u001b[0m\n","math: {'input': 'what is 2 + 2'}\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["'The answer to 2 + 2 is 4.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["chain.run(\"Why does every cell in our body contain DNA?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":356},"id":"H-3G-Ln8cLJg","executionInfo":{"status":"error","timestamp":1722894996799,"user_tz":-330,"elapsed":707,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"985bbdf7-2c4d-48db-acc6-64e90e09b2ed"},"execution_count":142,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new MultiPromptChain chain...\u001b[0m\n","biology: {'input': 'Why does every cell in our body contain DNA?'}"]},{"output_type":"error","ename":"ValueError","evalue":"Received invalid destination chain name 'biology'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-142-7fec47bc1aa9>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mchain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Why does every cell in our body contain DNA?\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py\u001b[0m in \u001b[0;36mwarning_emitting_wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    166\u001b[0m                 \u001b[0mwarned\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    167\u001b[0m                 \u001b[0memit_warning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 168\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    169\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    170\u001b[0m         \u001b[0;32masync\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mawarning_emitting_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self, callbacks, tags, metadata, *args, **kwargs)\u001b[0m\n\u001b[1;32m    598\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    599\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"`run` supports only one positional argument.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 600\u001b[0;31m             return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\n\u001b[0m\u001b[1;32m    601\u001b[0m                 \u001b[0m_output_key\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    602\u001b[0m             ]\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py\u001b[0m in \u001b[0;36mwarning_emitting_wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    166\u001b[0m                 \u001b[0mwarned\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    167\u001b[0m                 \u001b[0memit_warning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 168\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    169\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    170\u001b[0m         \u001b[0;32masync\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mawarning_emitting_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\u001b[0m\n\u001b[1;32m    381\u001b[0m         }\n\u001b[1;32m    382\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 383\u001b[0;31m         return self.invoke(\n\u001b[0m\u001b[1;32m    384\u001b[0m             \u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    385\u001b[0m             \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mRunnableConfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py\u001b[0m in \u001b[0;36minvoke\u001b[0;34m(self, input, config, **kwargs)\u001b[0m\n\u001b[1;32m    164\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mBaseException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    165\u001b[0m             \u001b[0mrun_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_chain_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 166\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    167\u001b[0m         \u001b[0mrun_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_chain_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    168\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain/chains/base.py\u001b[0m in \u001b[0;36minvoke\u001b[0;34m(self, input, config, **kwargs)\u001b[0m\n\u001b[1;32m    154\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_inputs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m             outputs = (\n\u001b[0;32m--> 156\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrun_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrun_manager\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    157\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mnew_arg_supported\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    158\u001b[0m                 \u001b[0;32melse\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/langchain/chains/router/base.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, inputs, run_manager)\u001b[0m\n\u001b[1;32m    105\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdefault_chain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mroute\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnext_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    106\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 107\u001b[0;31m             raise ValueError(\n\u001b[0m\u001b[1;32m    108\u001b[0m                 \u001b[0;34mf\"Received invalid destination chain name '{route.destination}'\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    109\u001b[0m             )\n","\u001b[0;31mValueError\u001b[0m: Received invalid destination chain name 'biology'"]}]},{"cell_type":"markdown","source":["## 5. Questions and Answer"],"metadata":{"id":"eAP5Anu1cUXs"}},{"cell_type":"code","source":["from langchain.chains import RetrievalQA\n","from langchain.chat_models import ChatOpenAI\n","from langchain.document_loaders import CSVLoader\n","from langchain.vectorstores import DocArrayInMemorySearch\n","from IPython.display import display, Markdown\n","from langchain.llms import OpenAI"],"metadata":{"id":"i8Hn6nf0cMuy","executionInfo":{"status":"ok","timestamp":1722895041114,"user_tz":-330,"elapsed":394,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":144,"outputs":[]},{"cell_type":"code","source":["file ='/content/drive/MyDrive/PwC/Colab Notebooks/Files/4.OutdoorClothingCatalog_1000.csv'\n","loader = CSVLoader(file_path=file)"],"metadata":{"id":"0c6v61bfizzd","executionInfo":{"status":"ok","timestamp":1722895042252,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":145,"outputs":[]},{"cell_type":"code","source":["from langchain.indexes import VectorstoreIndexCreator"],"metadata":{"id":"JSiMuckJi_Ze","executionInfo":{"status":"ok","timestamp":1722895051020,"user_tz":-330,"elapsed":1720,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":146,"outputs":[]},{"cell_type":"code","source":["!pip install docarray"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cxCrUdCSjB_2","executionInfo":{"status":"ok","timestamp":1722895065486,"user_tz":-330,"elapsed":5856,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"aa5b6cc8-101f-4829-8694-0ac532e51df8"},"execution_count":147,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting docarray\n","  Downloading docarray-0.40.0-py3-none-any.whl.metadata (36 kB)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from docarray) (1.26.4)\n","Requirement already satisfied: orjson>=3.8.2 in /usr/local/lib/python3.10/dist-packages (from docarray) (3.10.6)\n","Requirement already satisfied: pydantic>=1.10.8 in /usr/local/lib/python3.10/dist-packages (from docarray) (2.8.2)\n","Requirement already satisfied: rich>=13.1.0 in /usr/local/lib/python3.10/dist-packages (from docarray) (13.7.1)\n","Collecting types-requests>=2.28.11.6 (from docarray)\n","  Downloading types_requests-2.32.0.20240712-py3-none-any.whl.metadata (1.9 kB)\n","Requirement already satisfied: typing-inspect>=0.8.0 in /usr/local/lib/python3.10/dist-packages (from docarray) (0.9.0)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic>=1.10.8->docarray) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=1.10.8->docarray) (2.20.1)\n","Requirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=1.10.8->docarray) (4.12.2)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=13.1.0->docarray) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=13.1.0->docarray) (2.16.1)\n","Requirement already satisfied: urllib3>=2 in /usr/local/lib/python3.10/dist-packages (from types-requests>=2.28.11.6->docarray) (2.0.7)\n","Requirement already satisfied: mypy-extensions>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from typing-inspect>=0.8.0->docarray) (1.0.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=13.1.0->docarray) (0.1.2)\n","Downloading docarray-0.40.0-py3-none-any.whl (270 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m270.2/270.2 kB\u001b[0m \u001b[31m14.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading types_requests-2.32.0.20240712-py3-none-any.whl (15 kB)\n","Installing collected packages: types-requests, docarray\n","Successfully installed docarray-0.40.0 types-requests-2.32.0.20240712\n"]}]},{"cell_type":"code","source":["from langchain.embeddings import OpenAIEmbeddings  # or any other embeddings you are using\n"],"metadata":{"id":"hBQ_ZhFZj0J_","executionInfo":{"status":"ok","timestamp":1722895257254,"user_tz":-330,"elapsed":506,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":150,"outputs":[]},{"cell_type":"code","source":["embedding = OpenAIEmbeddings(openai_api_key=api_key)\n","\n","index = VectorstoreIndexCreator(\n","    embedding=embedding,\n","    vectorstore_cls=DocArrayInMemorySearch\n",").from_loaders([loader])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-qAOoFF6jEhJ","executionInfo":{"status":"ok","timestamp":1722895327363,"user_tz":-330,"elapsed":22405,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"f6fc0b92-8d35-4dc6-81a0-f32eef0ec2db"},"execution_count":153,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pydantic/_migration.py:283: UserWarning: `pydantic.error_wrappers:ValidationError` has been moved to `pydantic:ValidationError`.\n","  warnings.warn(f'`{import_path}` has been moved to `{new_location}`.')\n"]}]},{"cell_type":"code","source":["query =\"Please list all your shirts with sun protection \\\n","in a table in markdown and summarize each one.\""],"metadata":{"id":"nG4RLkWijM-5","executionInfo":{"status":"ok","timestamp":1722895104197,"user_tz":-330,"elapsed":410,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":149,"outputs":[]},{"cell_type":"code","source":["llm_replacement_model = OpenAI(temperature=0,\n","                               model='gpt-3.5-turbo-instruct',openai_api_key=api_key)\n","\n","response = index.query(query,\n","                       llm = llm_replacement_model)"],"metadata":{"id":"DrSXe9x7jPSp","executionInfo":{"status":"ok","timestamp":1722895373643,"user_tz":-330,"elapsed":5139,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":155,"outputs":[]},{"cell_type":"code","source":["display(Markdown(response))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"kN9M2nMmkMH8","executionInfo":{"status":"ok","timestamp":1722895389674,"user_tz":-330,"elapsed":413,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"b4f11eb1-2fba-4eb2-9d85-f89062634ac7"},"execution_count":156,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"\n\n| Name | Description | Sun Protection Rating |\n| --- | --- | --- |\n| Men's Tropical Plaid Short-Sleeve Shirt | Made of 100% polyester, UPF 50+ rated, wrinkle-resistant, front and back cape venting, two front bellows pockets, imported | SPF 50+, blocks 98% of harmful UV rays |\n| Men's Plaid Tropic Shirt, Short-Sleeve | Made of 52% polyester and 48% nylon, UPF 50+ rated, SunSmart technology blocks 98% of harmful UV rays, wrinkle-free, front and back cape venting, two front bellows pockets, imported | SPF 50+, blocks 98% of harmful UV rays |\n| Men's TropicVibe Shirt, Short-Sleeve | Made of 71% nylon and 29% polyester, UPF 50+ rated, front and back cape venting, two front bellows pockets, imported | SPF 50+, blocks 98% of harmful UV rays |\n| Sun Shield Shirt | Made of 78% nylon and 22% Lycra Xtra Life fiber, UPF 50+ rated, wicks moisture, fits comfortably over swimsuit, abrasion resistant"},"metadata":{}}]},{"cell_type":"code","source":["from langchain.document_loaders import CSVLoader\n","loader = CSVLoader(file_path=file)"],"metadata":{"id":"ZI7ypflVkU_Y","executionInfo":{"status":"ok","timestamp":1722895397894,"user_tz":-330,"elapsed":378,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":157,"outputs":[]},{"cell_type":"code","source":["docs = loader.load()"],"metadata":{"id":"RZQBx56-kW_C","executionInfo":{"status":"ok","timestamp":1722895402958,"user_tz":-330,"elapsed":459,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":158,"outputs":[]},{"cell_type":"code","source":["docs[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p1JokTPWkYL9","executionInfo":{"status":"ok","timestamp":1722895410727,"user_tz":-330,"elapsed":413,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"f6abc400-c5d3-42ab-e212-3b71fd5ce3b1"},"execution_count":159,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/drive/MyDrive/PwC/Colab Notebooks/Files/4.OutdoorClothingCatalog_1000.csv', 'row': 0}, page_content=\": 0\\nname: Women's Campside Oxfords\\ndescription: This ultracomfortable lace-to-toe Oxford boasts a super-soft canvas, thick cushioning, and quality construction for a broken-in feel from the first time you put them on. \\n\\nSize & Fit: Order regular shoe size. For half sizes not offered, order up to next whole size. \\n\\nSpecs: Approx. weight: 1 lb.1 oz. per pair. \\n\\nConstruction: Soft canvas material for a broken-in feel and look. Comfortable EVA innersole with Cleansport NXT® antimicrobial odor control. Vintage hunt, fish and camping motif on innersole. Moderate arch contour of innersole. EVA foam midsole for cushioning and support. Chain-tread-inspired molded rubber outsole with modified chain-tread pattern. Imported. \\n\\nQuestions? Please contact us for any inquiries.\")"]},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["from langchain.embeddings import OpenAIEmbeddings\n","embeddings = OpenAIEmbeddings(openai_api_key=api_key)"],"metadata":{"id":"tX5qMLbNkaH_","executionInfo":{"status":"ok","timestamp":1722895437369,"user_tz":-330,"elapsed":413,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":161,"outputs":[]},{"cell_type":"code","source":["embed = embeddings.embed_query(\"Hi my name is Harrison\")"],"metadata":{"id":"slFSDdalkcno","executionInfo":{"status":"ok","timestamp":1722895442525,"user_tz":-330,"elapsed":404,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":162,"outputs":[]},{"cell_type":"code","source":["print(len(embed))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"krZJp4JNkh5E","executionInfo":{"status":"ok","timestamp":1722895448737,"user_tz":-330,"elapsed":405,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"f19ad815-03eb-487a-81e3-894ff76181e5"},"execution_count":163,"outputs":[{"output_type":"stream","name":"stdout","text":["1536\n"]}]},{"cell_type":"code","source":["print(embed[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sMBLIC1Okjab","executionInfo":{"status":"ok","timestamp":1722895461869,"user_tz":-330,"elapsed":390,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"861aefc4-5f0b-45be-d44e-ae3dd92ba012"},"execution_count":164,"outputs":[{"output_type":"stream","name":"stdout","text":["[-0.021935116222567927, 0.0067511968393128025, -0.018258349739335232, -0.03915192509902946, -0.013979244800643546]\n"]}]},{"cell_type":"code","source":["db = DocArrayInMemorySearch.from_documents(\n","    docs,\n","    embeddings\n",")"],"metadata":{"id":"TU9CFna5kmnI","executionInfo":{"status":"ok","timestamp":1722895476514,"user_tz":-330,"elapsed":9006,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":165,"outputs":[]},{"cell_type":"code","source":["query = \"Please suggest a shirt with sunblocking\""],"metadata":{"id":"85_9QoLAkoGA","executionInfo":{"status":"ok","timestamp":1722895476515,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":166,"outputs":[]},{"cell_type":"code","source":["docs = db.similarity_search(query)"],"metadata":{"id":"MXoo58_NkpT8","executionInfo":{"status":"ok","timestamp":1722895480558,"user_tz":-330,"elapsed":406,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":167,"outputs":[]},{"cell_type":"code","source":["len(docs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m4VDGG4mkrKx","executionInfo":{"status":"ok","timestamp":1722895494195,"user_tz":-330,"elapsed":399,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"e0774b98-0f09-45ac-ed1c-d852923c7929"},"execution_count":168,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":168}]},{"cell_type":"code","source":["docs[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xn2Ex9gIkugd","executionInfo":{"status":"ok","timestamp":1722895499739,"user_tz":-330,"elapsed":402,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"1fe2ca7e-2834-49ff-f3fe-b79106a3af6c"},"execution_count":169,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/drive/MyDrive/PwC/Colab Notebooks/Files/4.OutdoorClothingCatalog_1000.csv', 'row': 255}, page_content=': 255\\nname: Sun Shield Shirt by\\ndescription: \"Block the sun, not the fun – our high-performance sun shirt is guaranteed to protect from harmful UV rays. \\n\\nSize & Fit: Slightly Fitted: Softly shapes the body. Falls at hip.\\n\\nFabric & Care: 78% nylon, 22% Lycra Xtra Life fiber. UPF 50+ rated – the highest rated sun protection possible. Handwash, line dry.\\n\\nAdditional Features: Wicks moisture for quick-drying comfort. Fits comfortably over your favorite swimsuit. Abrasion resistant for season after season of wear. Imported.\\n\\nSun Protection That Won\\'t Wear Off\\nOur high-performance fabric provides SPF 50+ sun protection, blocking 98% of the sun\\'s harmful rays. This fabric is recommended by The Skin Cancer Foundation as an effective UV protectant.')"]},"metadata":{},"execution_count":169}]},{"cell_type":"code","source":["retriever = db.as_retriever()"],"metadata":{"id":"HOJhyzegkv3T","executionInfo":{"status":"ok","timestamp":1722895510659,"user_tz":-330,"elapsed":400,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":170,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature = 0.0, model=llm_model,openai_api_key=api_key)"],"metadata":{"id":"2yTYZDrHkyhp","executionInfo":{"status":"ok","timestamp":1722895536493,"user_tz":-330,"elapsed":622,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":172,"outputs":[]},{"cell_type":"code","source":["qdocs = \"\".join([docs[i].page_content for i in range(len(docs))])\n"],"metadata":{"id":"JJJJ5Xl6k0WR","executionInfo":{"status":"ok","timestamp":1722895537152,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":173,"outputs":[]},{"cell_type":"code","source":["response = llm.call_as_llm(f\"{qdocs} Question: Please list all your \\\n","shirts with sun protection in a table in markdown and summarize each one.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ergnrk3gk4sZ","executionInfo":{"status":"ok","timestamp":1722895600310,"user_tz":-330,"elapsed":55179,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"e8a66304-384c-4522-9054-24ebfa20d954"},"execution_count":174,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py:139: LangChainDeprecationWarning: The method `BaseChatModel.call_as_llm` was deprecated in langchain-core 0.1.7 and will be removed in 0.3.0. Use invoke instead.\n","  warn_deprecated(\n"]}]},{"cell_type":"code","source":["display(Markdown(response))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":46},"id":"DfxsRgYyk7Cu","executionInfo":{"status":"ok","timestamp":1722895600310,"user_tz":-330,"elapsed":21,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"9f555081-2218-4ecf-e465-7442845c8f57"},"execution_count":175,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"| Name                           | Description},"metadata":{}}]},{"cell_type":"code","source":["qa_stuff = RetrievalQA.from_chain_type(\n","    llm=llm,\n","    chain_type=\"stuff\",\n","    retriever=retriever,\n","    verbose=True\n",")"],"metadata":{"id":"cqRMurE6k8Tq","executionInfo":{"status":"ok","timestamp":1722895600310,"user_tz":-330,"elapsed":19,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":176,"outputs":[]},{"cell_type":"code","source":["query =  \"Please list all your shirts with sun protection in a table \\\n","in markdown and summarize each one.\""],"metadata":{"id":"oJLxlhz0k9ps","executionInfo":{"status":"ok","timestamp":1722895600310,"user_tz":-330,"elapsed":18,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":177,"outputs":[]},{"cell_type":"code","source":["response = qa_stuff.run(query)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OMucQyS2k_EK","executionInfo":{"status":"ok","timestamp":1722895645659,"user_tz":-330,"elapsed":45367,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"69b76ad8-0c08-441f-cfd5-de6139943d17"},"execution_count":178,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]}]},{"cell_type":"code","source":["display(Markdown(response))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":46},"id":"qAX2QXjwlAzE","executionInfo":{"status":"ok","timestamp":1722895645659,"user_tz":-330,"elapsed":27,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"a80414a6-9e73-4516-9b79-8c4229991930"},"execution_count":179,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"| Shirt Name                                | Description},"metadata":{}}]},{"cell_type":"code","source":["response = index.query(query, llm=llm)"],"metadata":{"id":"yr4fMh3tlB64","executionInfo":{"status":"ok","timestamp":1722895696040,"user_tz":-330,"elapsed":50404,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":180,"outputs":[]},{"cell_type":"code","source":["index = VectorstoreIndexCreator(\n","    vectorstore_cls=DocArrayInMemorySearch,\n","    embedding=embeddings,\n",").from_loaders([loader])"],"metadata":{"id":"DvDkWEP8lEdg","executionInfo":{"status":"ok","timestamp":1722895705717,"user_tz":-330,"elapsed":9691,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":181,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"AU1viNjelE1d"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 6. Evaluation"],"metadata":{"id":"SUaPVyhGlJWB"}},{"cell_type":"code","source":["from langchain.chains import RetrievalQA\n","from langchain.chat_models import ChatOpenAI\n","from langchain.document_loaders import CSVLoader\n","from langchain.indexes import VectorstoreIndexCreator\n","from langchain.vectorstores import DocArrayInMemorySearch\n","\n","data = loader.load()"],"metadata":{"id":"zwCLnqk8lLnP","executionInfo":{"status":"ok","timestamp":1722897959305,"user_tz":-330,"elapsed":578,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":229,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature = 0.0, model=llm_model,openai_api_key=api_key)\n","qa = RetrievalQA.from_chain_type(\n","    llm=llm,\n","    chain_type=\"stuff\",\n","    retriever=index.vectorstore.as_retriever(),\n","    verbose=True,\n","    chain_type_kwargs = {\n","        \"document_separator\": \"<<<<>>>>>\"\n","    }\n",")"],"metadata":{"id":"9KIywD9QnYlB","executionInfo":{"status":"ok","timestamp":1722897959959,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":230,"outputs":[]},{"cell_type":"code","source":["data[10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDRSQ_AunbbZ","executionInfo":{"status":"ok","timestamp":1722897959959,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"3b893f23-1bd0-4d85-aecf-db4b824d306e"},"execution_count":231,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/drive/MyDrive/PwC/Colab Notebooks/Files/4.OutdoorClothingCatalog_1000.csv', 'row': 10}, page_content=\": 10\\nname: Cozy Comfort Pullover Set, Stripe\\ndescription: Perfect for lounging, this striped knit set lives up to its name. We used ultrasoft fabric and an easy design that's as comfortable at bedtime as it is when we have to make a quick run out.\\n\\nSize & Fit\\n- Pants are Favorite Fit: Sits lower on the waist.\\n- Relaxed Fit: Our most generous fit sits farthest from the body.\\n\\nFabric & Care\\n- In the softest blend of 63% polyester, 35% rayon and 2% spandex.\\n\\nAdditional Features\\n- Relaxed fit top with raglan sleeves and rounded hem.\\n- Pull-on pants have a wide elastic waistband and drawstring, side pockets and a modern slim leg.\\n\\nImported.\")"]},"metadata":{},"execution_count":231}]},{"cell_type":"code","source":["data[11]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L4-RfRRfniK5","executionInfo":{"status":"ok","timestamp":1722897959959,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"f42decde-c593-42cc-f1f2-d053139ca5b1"},"execution_count":232,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/drive/MyDrive/PwC/Colab Notebooks/Files/4.OutdoorClothingCatalog_1000.csv', 'row': 11}, page_content=': 11\\nname: Ultra-Lofty 850 Stretch Down Hooded Jacket\\ndescription: This technical stretch down jacket from our DownTek collection is sure to keep you warm and comfortable with its full-stretch construction providing exceptional range of motion. With a slightly fitted style that falls at the hip and best with a midweight layer, this jacket is suitable for light activity up to 20° and moderate activity up to -30°. The soft and durable 100% polyester shell offers complete windproof protection and is insulated with warm, lofty goose down. Other features include welded baffles for a no-stitch construction and excellent stretch, an adjustable hood, an interior media port and mesh stash pocket and a hem drawcord. Machine wash and dry. Imported.')"]},"metadata":{},"execution_count":232}]},{"cell_type":"code","source":["examples = [\n","    {\n","        \"query\": \"Do the Cozy Comfort Pullover Set\\\n","        have side pockets?\",\n","        \"answer\": \"Yes\"\n","    },\n","    {\n","        \"query\": \"What collection is the Ultra-Lofty \\\n","        850 Stretch Down Hooded Jacket from?\",\n","        \"answer\": \"The DownTek collection\"\n","    }\n","]"],"metadata":{"id":"QTJmXpd1njjr","executionInfo":{"status":"ok","timestamp":1722897960410,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":233,"outputs":[]},{"cell_type":"code","source":["from langchain.evaluation.qa import QAGenerateChain\n"],"metadata":{"id":"cCmaY_KUnlY2","executionInfo":{"status":"ok","timestamp":1722897960410,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":234,"outputs":[]},{"cell_type":"code","source":["example_gen_chain = QAGenerateChain.from_llm(ChatOpenAI(model=llm_model,openai_api_key=api_key))"],"metadata":{"id":"8WeWaKNCnnU5","executionInfo":{"status":"ok","timestamp":1722897961042,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":235,"outputs":[]},{"cell_type":"code","source":["new_examples = example_gen_chain.apply_and_parse(\n","    [{\"doc\": t} for t in data[:5]]\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1xbrbR57no9k","executionInfo":{"status":"ok","timestamp":1722897967706,"user_tz":-330,"elapsed":6173,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"fcd6712f-01a5-4d5d-bc2f-e4da9c734b41"},"execution_count":236,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/langchain/chains/llm.py:369: UserWarning: The apply_and_parse method is deprecated, instead pass an output parser directly to LLMChain.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["new_examples[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T3MOaAilnt5l","executionInfo":{"status":"ok","timestamp":1722897967706,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"2a2a95c7-be19-43f7-a4e9-8988d75d706f"},"execution_count":237,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'qa_pairs': {'query': \"What are the key features of the Women's Campside Oxfords as described in the document?\",\n","  'answer': \"The key features of the Women's Campside Oxfords include:\"}}"]},"metadata":{},"execution_count":237}]},{"cell_type":"code","source":["data[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JXT1RGdYnvsJ","executionInfo":{"status":"ok","timestamp":1722897967706,"user_tz":-330,"elapsed":8,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"d4556485-12c0-439f-de64-a52277ce28e6"},"execution_count":238,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Document(metadata={'source': '/content/drive/MyDrive/PwC/Colab Notebooks/Files/4.OutdoorClothingCatalog_1000.csv', 'row': 0}, page_content=\": 0\\nname: Women's Campside Oxfords\\ndescription: This ultracomfortable lace-to-toe Oxford boasts a super-soft canvas, thick cushioning, and quality construction for a broken-in feel from the first time you put them on. \\n\\nSize & Fit: Order regular shoe size. For half sizes not offered, order up to next whole size. \\n\\nSpecs: Approx. weight: 1 lb.1 oz. per pair. \\n\\nConstruction: Soft canvas material for a broken-in feel and look. Comfortable EVA innersole with Cleansport NXT® antimicrobial odor control. Vintage hunt, fish and camping motif on innersole. Moderate arch contour of innersole. EVA foam midsole for cushioning and support. Chain-tread-inspired molded rubber outsole with modified chain-tread pattern. Imported. \\n\\nQuestions? Please contact us for any inquiries.\")"]},"metadata":{},"execution_count":238}]},{"cell_type":"code","source":["# Convert the given list into the desired format\n","examples += [\n","    {\"query\": item['qa_pairs']['query'], \"answer\": item['qa_pairs']['answer']}\n","    for item in new_examples\n","]"],"metadata":{"id":"6PtqtHX3t-rO","executionInfo":{"status":"ok","timestamp":1722897967706,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":239,"outputs":[]},{"cell_type":"code","source":["qa.run(examples[0][\"query\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":122},"id":"YxMlpm31ny3v","executionInfo":{"status":"ok","timestamp":1722897973990,"user_tz":-330,"elapsed":1099,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"500d646e-59d2-4462-d05d-7c24cf54bd6f"},"execution_count":240,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["'Yes, the Cozy Comfort Pullover Set does have side pockets.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":240}]},{"cell_type":"code","source":["import langchain\n","langchain.debug = True"],"metadata":{"id":"cjyCtnSUn0M7","executionInfo":{"status":"ok","timestamp":1722897976241,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":241,"outputs":[]},{"cell_type":"code","source":["qa.run(examples[0][\"query\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"TSg-BHkpn1h_","executionInfo":{"status":"ok","timestamp":1722897979153,"user_tz":-330,"elapsed":2251,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"0f427462-a133-4e52-d9bf-9f91fbbaae17"},"execution_count":242,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[32;1m\u001b[1;3m[chain/start]\u001b[0m \u001b[1m[chain:RetrievalQA] Entering Chain run with input:\n","\u001b[0m{\n","  \"query\": \"Do the Cozy Comfort Pullover Set        have side pockets?\"\n","}\n","\u001b[32;1m\u001b[1;3m[chain/start]\u001b[0m \u001b[1m[chain:RetrievalQA > chain:StuffDocumentsChain] Entering Chain run with input:\n","\u001b[0m[inputs]\n","\u001b[32;1m\u001b[1;3m[chain/start]\u001b[0m \u001b[1m[chain:RetrievalQA > chain:StuffDocumentsChain > chain:LLMChain] Entering Chain run with input:\n","\u001b[0m{\n","  \"question\": \"Do the Cozy Comfort Pullover Set        have side pockets?\",\n","  \"context\": \": 10\\nname: Cozy Comfort Pullover Set, Stripe\\ndescription: Perfect for lounging, this striped knit set lives up to its name. We used ultrasoft fabric and an easy design that's as comfortable at bedtime as it is when we have to make a quick run out.\\n\\nSize & Fit\\n- Pants are Favorite Fit: Sits lower on the waist.\\n- Relaxed Fit: Our most generous fit sits farthest from the body.\\n\\nFabric & Care\\n- In the softest blend of 63% polyester, 35% rayon and 2% spandex.\\n\\nAdditional Features\\n- Relaxed fit top with raglan sleeves and rounded hem.\\n- Pull-on pants have a wide elastic waistband and drawstring, side pockets and a modern slim leg.\\n\\nImported.<<<<>>>>>: 73\\nname: Cozy Cuddles Knit Pullover Set\\ndescription: Perfect for lounging, this knit set lives up to its name. We used ultrasoft fabric and an easy design that's as comfortable at bedtime as it is when we have to make a quick run out. \\n\\nSize & Fit \\nPants are Favorite Fit: Sits lower on the waist. \\nRelaxed Fit: Our most generous fit sits farthest from the body. \\n\\nFabric & Care \\nIn the softest blend of 63% polyester, 35% rayon and 2% spandex.\\n\\nAdditional Features \\nRelaxed fit top with raglan sleeves and rounded hem. \\nPull-on pants have a wide elastic waistband and drawstring, side pockets and a modern slim leg. \\nImported.<<<<>>>>>: 632\\nname: Cozy Comfort Fleece Pullover\\ndescription: The ultimate sweater fleece – made from superior fabric and offered at an unbeatable price. \\n\\nSize & Fit\\nSlightly Fitted: Softly shapes the body. Falls at hip. \\n\\nWhy We Love It\\nOur customers (and employees) love the rugged construction and heritage-inspired styling of our popular Sweater Fleece Pullover and wear it for absolutely everything. From high-intensity activities to everyday tasks, you'll find yourself reaching for it every time.\\n\\nFabric & Care\\nRugged sweater-knit exterior and soft brushed interior for exceptional warmth and comfort. Made from soft, 100% polyester. Machine wash and dry.\\n\\nAdditional Features\\nFeatures our classic Mount Katahdin logo. Snap placket. Front princess seams create a feminine shape. Kangaroo handwarmer pockets. Cuffs and hem reinforced with jersey binding. Imported.\\n\\n – Official Supplier to the U.S. Ski Team\\nTHEIR WILL TO WIN, WOVEN RIGHT IN. LEARN MORE<<<<>>>>>: 151\\nname: Cozy Quilted Sweatshirt\\ndescription: Our sweatshirt is an instant classic with its great quilted texture and versatile weight that easily transitions between seasons. With a traditional fit that is relaxed through the chest, sleeve, and waist, this pullover is lightweight enough to be worn most months of the year. The cotton blend fabric is super soft and comfortable, making it the perfect casual layer. To make dressing easy, this sweatshirt also features a snap placket and a heritage-inspired Mt. Katahdin logo patch. For care, machine wash and dry. Imported.\"\n","}\n","\u001b[32;1m\u001b[1;3m[llm/start]\u001b[0m \u001b[1m[chain:RetrievalQA > chain:StuffDocumentsChain > chain:LLMChain > llm:ChatOpenAI] Entering LLM run with input:\n","\u001b[0m{\n","  \"prompts\": [\n","    \"System: Use the following pieces of context to answer the user's question. \\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n----------------\\n: 10\\nname: Cozy Comfort Pullover Set, Stripe\\ndescription: Perfect for lounging, this striped knit set lives up to its name. We used ultrasoft fabric and an easy design that's as comfortable at bedtime as it is when we have to make a quick run out.\\n\\nSize & Fit\\n- Pants are Favorite Fit: Sits lower on the waist.\\n- Relaxed Fit: Our most generous fit sits farthest from the body.\\n\\nFabric & Care\\n- In the softest blend of 63% polyester, 35% rayon and 2% spandex.\\n\\nAdditional Features\\n- Relaxed fit top with raglan sleeves and rounded hem.\\n- Pull-on pants have a wide elastic waistband and drawstring, side pockets and a modern slim leg.\\n\\nImported.<<<<>>>>>: 73\\nname: Cozy Cuddles Knit Pullover Set\\ndescription: Perfect for lounging, this knit set lives up to its name. We used ultrasoft fabric and an easy design that's as comfortable at bedtime as it is when we have to make a quick run out. \\n\\nSize & Fit \\nPants are Favorite Fit: Sits lower on the waist. \\nRelaxed Fit: Our most generous fit sits farthest from the body. \\n\\nFabric & Care \\nIn the softest blend of 63% polyester, 35% rayon and 2% spandex.\\n\\nAdditional Features \\nRelaxed fit top with raglan sleeves and rounded hem. \\nPull-on pants have a wide elastic waistband and drawstring, side pockets and a modern slim leg. \\nImported.<<<<>>>>>: 632\\nname: Cozy Comfort Fleece Pullover\\ndescription: The ultimate sweater fleece – made from superior fabric and offered at an unbeatable price. \\n\\nSize & Fit\\nSlightly Fitted: Softly shapes the body. Falls at hip. \\n\\nWhy We Love It\\nOur customers (and employees) love the rugged construction and heritage-inspired styling of our popular Sweater Fleece Pullover and wear it for absolutely everything. From high-intensity activities to everyday tasks, you'll find yourself reaching for it every time.\\n\\nFabric & Care\\nRugged sweater-knit exterior and soft brushed interior for exceptional warmth and comfort. Made from soft, 100% polyester. Machine wash and dry.\\n\\nAdditional Features\\nFeatures our classic Mount Katahdin logo. Snap placket. Front princess seams create a feminine shape. Kangaroo handwarmer pockets. Cuffs and hem reinforced with jersey binding. Imported.\\n\\n – Official Supplier to the U.S. Ski Team\\nTHEIR WILL TO WIN, WOVEN RIGHT IN. LEARN MORE<<<<>>>>>: 151\\nname: Cozy Quilted Sweatshirt\\ndescription: Our sweatshirt is an instant classic with its great quilted texture and versatile weight that easily transitions between seasons. With a traditional fit that is relaxed through the chest, sleeve, and waist, this pullover is lightweight enough to be worn most months of the year. The cotton blend fabric is super soft and comfortable, making it the perfect casual layer. To make dressing easy, this sweatshirt also features a snap placket and a heritage-inspired Mt. Katahdin logo patch. For care, machine wash and dry. Imported.\\nHuman: Do the Cozy Comfort Pullover Set        have side pockets?\"\n","  ]\n","}\n","\u001b[36;1m\u001b[1;3m[llm/end]\u001b[0m \u001b[1m[chain:RetrievalQA > chain:StuffDocumentsChain > chain:LLMChain > llm:ChatOpenAI] [1.83s] Exiting LLM run with output:\n","\u001b[0m{\n","  \"generations\": [\n","    [\n","      {\n","        \"text\": \"Yes, the Cozy Comfort Pullover Set does have side pockets.\",\n","        \"generation_info\": {\n","          \"finish_reason\": \"stop\",\n","          \"logprobs\": null\n","        },\n","        \"type\": \"ChatGeneration\",\n","        \"message\": {\n","          \"lc\": 1,\n","          \"type\": \"constructor\",\n","          \"id\": [\n","            \"langchain\",\n","            \"schema\",\n","            \"messages\",\n","            \"AIMessage\"\n","          ],\n","          \"kwargs\": {\n","            \"content\": \"Yes, the Cozy Comfort Pullover Set does have side pockets.\",\n","            \"response_metadata\": {\n","              \"token_usage\": {\n","                \"completion_tokens\": 14,\n","                \"prompt_tokens\": 733,\n","                \"total_tokens\": 747\n","              },\n","              \"model_name\": \"gpt-3.5-turbo\",\n","              \"system_fingerprint\": null,\n","              \"finish_reason\": \"stop\",\n","              \"logprobs\": null\n","            },\n","            \"type\": \"ai\",\n","            \"id\": \"run-277ca014-1c71-4c5f-8f38-6e122015e3bb-0\",\n","            \"tool_calls\": [],\n","            \"invalid_tool_calls\": []\n","          }\n","        }\n","      }\n","    ]\n","  ],\n","  \"llm_output\": {\n","    \"token_usage\": {\n","      \"completion_tokens\": 14,\n","      \"prompt_tokens\": 733,\n","      \"total_tokens\": 747\n","    },\n","    \"model_name\": \"gpt-3.5-turbo\",\n","    \"system_fingerprint\": null\n","  },\n","  \"run\": null\n","}\n","\u001b[36;1m\u001b[1;3m[chain/end]\u001b[0m \u001b[1m[chain:RetrievalQA > chain:StuffDocumentsChain > chain:LLMChain] [1.83s] Exiting Chain run with output:\n","\u001b[0m{\n","  \"text\": \"Yes, the Cozy Comfort Pullover Set does have side pockets.\"\n","}\n","\u001b[36;1m\u001b[1;3m[chain/end]\u001b[0m \u001b[1m[chain:RetrievalQA > chain:StuffDocumentsChain] [1.83s] Exiting Chain run with output:\n","\u001b[0m{\n","  \"output_text\": \"Yes, the Cozy Comfort Pullover Set does have side pockets.\"\n","}\n","\u001b[36;1m\u001b[1;3m[chain/end]\u001b[0m \u001b[1m[chain:RetrievalQA] [2.01s] Exiting Chain run with output:\n","\u001b[0m{\n","  \"result\": \"Yes, the Cozy Comfort Pullover Set does have side pockets.\"\n","}\n"]},{"output_type":"execute_result","data":{"text/plain":["'Yes, the Cozy Comfort Pullover Set does have side pockets.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":242}]},{"cell_type":"code","source":["langchain.debug = False"],"metadata":{"id":"bXcgoGWin2ui","executionInfo":{"status":"ok","timestamp":1722897982753,"user_tz":-330,"elapsed":515,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":243,"outputs":[]},{"cell_type":"code","source":["examples"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8Mu0Ig2xskh5","executionInfo":{"status":"ok","timestamp":1722897983421,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"0c106a4d-fb49-4ed0-88da-7e674a05acb1"},"execution_count":244,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'query': 'Do the Cozy Comfort Pullover Set        have side pockets?',\n","  'answer': 'Yes'},\n"," {'query': 'What collection is the Ultra-Lofty         850 Stretch Down Hooded Jacket from?',\n","  'answer': 'The DownTek collection'},\n"," {'query': \"What are the key features of the Women's Campside Oxfords as described in the document?\",\n","  'answer': \"The key features of the Women's Campside Oxfords include:\"},\n"," {'query': 'What are the dimensions of the small and medium Recycled Waterhog dog mats in the document?',\n","  'answer': 'The small Recycled Waterhog dog mat has dimensions of 18\" x 28\", while the medium size has dimensions of 22.5\" x 34.5\".'},\n"," {'query': \"What features does the Infant and Toddler Girls' Coastal Chill Swimsuit, Two-Piece offer?\",\n","  'answer': \"The toddler's two-piece swimsuit offers bright colors, ruffles, exclusive whimsical prints, four-way-stretch and chlorine-resistant fabric, UPF 50+ rated sun protection, crossover no-slip straps, fully lined bottom for secure fit and maximum coverage, and it is machine washable and should be line dried for best results.\"},\n"," {'query': 'What is the fabric composition of the Refresh Swimwear V-Neck Tankini Contrasts?',\n","  'answer': 'The Refresh Swimwear V-Neck Tankini Contrasts is made of 82% recycled nylon and 18% Lycra® spandex for the body, and lined with 90% recycled nylon and 10% Lycra® spandex.'},\n"," {'query': 'What technology sets the EcoFlex 3L Storm Pants apart from other waterproof pants?',\n","  'answer': 'The EcoFlex 3L Storm Pants feature TEK O2 technology, which offers the most breathability ever tested, making them ideal for a variety of outdoor activities year-round.'}]"]},"metadata":{},"execution_count":244}]},{"cell_type":"code","source":["# LLM Assisted Evaluation\n","predictions = qa.apply(examples)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"waiE8UQMn4NC","executionInfo":{"status":"ok","timestamp":1722897995348,"user_tz":-330,"elapsed":8676,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"e9ca364d-f7b2-44f3-b8e4-de6e2e1119c1"},"execution_count":245,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n","\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n","\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n","\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n","\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n","\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n","\n","\n","\u001b[1m> Entering new RetrievalQA chain...\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]}]},{"cell_type":"code","source":["from langchain.evaluation.qa import QAEvalChain"],"metadata":{"id":"irr_0Bsnn76f","executionInfo":{"status":"ok","timestamp":1722897998904,"user_tz":-330,"elapsed":396,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":246,"outputs":[]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0, model=llm_model,openai_api_key=api_key)\n","eval_chain = QAEvalChain.from_llm(llm)"],"metadata":{"id":"HCilBGVsn9Hu","executionInfo":{"status":"ok","timestamp":1722898002313,"user_tz":-330,"elapsed":440,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":247,"outputs":[]},{"cell_type":"code","source":["graded_outputs = eval_chain.evaluate(examples, predictions)"],"metadata":{"id":"1AY-ecI7oD_5","executionInfo":{"status":"ok","timestamp":1722898005734,"user_tz":-330,"elapsed":2737,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":248,"outputs":[]},{"cell_type":"code","source":["for i, eg in enumerate(examples):\n","    print(f\"Example {i}:\")\n","    print(\"Question: \" + predictions[i]['query'])\n","    print(\"Real Answer: \" + predictions[i]['answer'])\n","    print(\"Predicted Answer: \" + predictions[i]['result'])\n","    print(\"Predicted Grade: \" + graded_outputs[i]['results'])\n","    print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JB5L_OMFoJst","executionInfo":{"status":"ok","timestamp":1722898047886,"user_tz":-330,"elapsed":419,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"9a841915-b0d7-4c4d-8bce-74fe6a9a219c"},"execution_count":251,"outputs":[{"output_type":"stream","name":"stdout","text":["Example 0:\n","Question: Do the Cozy Comfort Pullover Set        have side pockets?\n","Real Answer: Yes\n","Predicted Answer: Yes, the Cozy Comfort Pullover Set does have side pockets.\n","Predicted Grade: CORRECT\n","\n","Example 1:\n","Question: What collection is the Ultra-Lofty         850 Stretch Down Hooded Jacket from?\n","Real Answer: The DownTek collection\n","Predicted Answer: The Ultra-Lofty 850 Stretch Down Hooded Jacket is from the DownTek collection.\n","Predicted Grade: CORRECT\n","\n","Example 2:\n","Question: What are the key features of the Women's Campside Oxfords as described in the document?\n","Real Answer: The key features of the Women's Campside Oxfords include:\n","Predicted Answer: The key features of the Women's Campside Oxfords as described in the document are:\n","1. Soft canvas material for a broken-in feel and look.\n","2. Comfortable EVA innersole with Cleansport NXT® antimicrobial odor control.\n","3. Vintage hunt, fish, and camping motif on innersole.\n","4. Moderate arch contour of innersole.\n","5. EVA foam midsole for cushioning and support.\n","6. Chain-tread-inspired molded rubber outsole with modified chain-tread pattern.\n","7. Approx. weight: 1 lb. 1 oz. per pair.\n","Predicted Grade: CORRECT\n","\n","Example 3:\n","Question: What are the dimensions of the small and medium Recycled Waterhog dog mats in the document?\n","Real Answer: The small Recycled Waterhog dog mat has dimensions of 18\" x 28\", while the medium size has dimensions of 22.5\" x 34.5\".\n","Predicted Answer: The dimensions of the small Recycled Waterhog dog mat are 18\" x 28\", and the dimensions of the medium Recycled Waterhog dog mat are 22.5\" x 34.5\".\n","Predicted Grade: CORRECT\n","\n","Example 4:\n","Question: What features does the Infant and Toddler Girls' Coastal Chill Swimsuit, Two-Piece offer?\n","Real Answer: The toddler's two-piece swimsuit offers bright colors, ruffles, exclusive whimsical prints, four-way-stretch and chlorine-resistant fabric, UPF 50+ rated sun protection, crossover no-slip straps, fully lined bottom for secure fit and maximum coverage, and it is machine washable and should be line dried for best results.\n","Predicted Answer: The Infant and Toddler Girls' Coastal Chill Swimsuit, Two-Piece offers features such as bright colors, ruffles, exclusive whimsical prints, four-way-stretch and chlorine-resistant fabric, UPF 50+ sun protection, crossover no-slip straps, fully lined bottom for secure fit and maximum coverage. It is also machine washable and should be line dried for best results.\n","Predicted Grade: CORRECT\n","\n","Example 5:\n","Question: What is the fabric composition of the Refresh Swimwear V-Neck Tankini Contrasts?\n","Real Answer: The Refresh Swimwear V-Neck Tankini Contrasts is made of 82% recycled nylon and 18% Lycra® spandex for the body, and lined with 90% recycled nylon and 10% Lycra® spandex.\n","Predicted Answer: The fabric composition of the Refresh Swimwear V-Neck Tankini Contrasts is as follows:\n","- Body: 82% recycled nylon, 18% Lycra® spandex\n","- Lining: 90% recycled nylon, 10% Lycra® spandex\n","Predicted Grade: CORRECT\n","\n","Example 6:\n","Question: What technology sets the EcoFlex 3L Storm Pants apart from other waterproof pants?\n","Real Answer: The EcoFlex 3L Storm Pants feature TEK O2 technology, which offers the most breathability ever tested, making them ideal for a variety of outdoor activities year-round.\n","Predicted Answer: The EcoFlex 3L Storm Pants feature TEK O2 technology, which offers exceptional breathability, making them stand out from other waterproof pants.\n","Predicted Grade: CORRECT\n","\n"]}]},{"cell_type":"code","source":["graded_outputs[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3wJ-m08EoLO3","executionInfo":{"status":"ok","timestamp":1722898056714,"user_tz":-330,"elapsed":396,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"7f1f32ae-5740-491d-d622-3de237aab01d"},"execution_count":252,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'results': 'CORRECT'}"]},"metadata":{},"execution_count":252}]},{"cell_type":"code","source":[],"metadata":{"id":"yl2bAf0MoPdb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 7. Agents"],"metadata":{"id":"yATHzuiau48h"}},{"cell_type":"markdown","source":["### Built-in LangChain Tools"],"metadata":{"id":"t-S8UJs8wcX8"}},{"cell_type":"code","source":[" !pip install langchain_experimental\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dLQTrWJRwrvf","executionInfo":{"status":"ok","timestamp":1722898636620,"user_tz":-330,"elapsed":7114,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"459c3368-160a-45ef-9aa6-6a160c896ffe"},"execution_count":254,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting langchain_experimental\n","  Downloading langchain_experimental-0.0.64-py3-none-any.whl.metadata (1.7 kB)\n","Requirement already satisfied: langchain-community<0.3.0,>=0.2.10 in /usr/local/lib/python3.10/dist-packages (from langchain_experimental) (0.2.11)\n","Requirement already satisfied: langchain-core<0.3.0,>=0.2.27 in /usr/local/lib/python3.10/dist-packages (from langchain_experimental) (0.2.28)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (6.0.1)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (2.0.31)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (3.10.0)\n","Requirement already satisfied: dataclasses-json<0.7,>=0.5.7 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (0.6.7)\n","Requirement already satisfied: langchain<0.3.0,>=0.2.12 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (0.2.12)\n","Requirement already satisfied: langsmith<0.2.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (0.1.96)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (1.26.4)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (2.31.0)\n","Requirement already satisfied: tenacity!=8.4.0,<9.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain-community<0.3.0,>=0.2.10->langchain_experimental) (8.5.0)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain_experimental) (1.33)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain_experimental) (24.1)\n","Requirement already satisfied: pydantic<3,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain_experimental) (2.8.2)\n","Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain_experimental) (4.12.2)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (2.3.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (1.9.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (4.0.3)\n","Requirement already satisfied: marshmallow<4.0.0,>=3.18.0 in /usr/local/lib/python3.10/dist-packages (from dataclasses-json<0.7,>=0.5.7->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (3.21.3)\n","Requirement already satisfied: typing-inspect<1,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from dataclasses-json<0.7,>=0.5.7->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (0.9.0)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.3.0,>=0.2.27->langchain_experimental) (3.0.0)\n","Requirement already satisfied: langchain-text-splitters<0.3.0,>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from langchain<0.3.0,>=0.2.12->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (0.2.2)\n","Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.2.0,>=0.1.0->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (3.10.6)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain-core<0.3.0,>=0.2.27->langchain_experimental) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain-core<0.3.0,>=0.2.27->langchain_experimental) (2.20.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (2024.7.4)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (3.0.3)\n","Requirement already satisfied: mypy-extensions>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain-community<0.3.0,>=0.2.10->langchain_experimental) (1.0.0)\n","Downloading langchain_experimental-0.0.64-py3-none-any.whl (204 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m204.3/204.3 kB\u001b[0m \u001b[31m6.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: langchain_experimental\n","Successfully installed langchain_experimental-0.0.64\n"]}]},{"cell_type":"code","source":["!pip install langchain --upgrade"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TXPSG35IxXvT","executionInfo":{"status":"ok","timestamp":1722898818653,"user_tz":-330,"elapsed":8421,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"781bc8d9-d427-4bb2-d006-1c1cd9c472ea"},"execution_count":260,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: langchain in /usr/local/lib/python3.10/dist-packages (0.2.12)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (6.0.1)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.0.31)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (3.10.0)\n","Requirement already satisfied: async-timeout<5.0.0,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (4.0.3)\n","Requirement already satisfied: langchain-core<0.3.0,>=0.2.27 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.2.28)\n","Requirement already satisfied: langchain-text-splitters<0.3.0,>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.2.2)\n","Requirement already satisfied: langsmith<0.2.0,>=0.1.17 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.1.96)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.26.4)\n","Requirement already satisfied: pydantic<3,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.8.2)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.31.0)\n","Requirement already satisfied: tenacity!=8.4.0,<9.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (8.5.0)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (2.3.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.9.4)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain) (1.33)\n","Requirement already satisfied: packaging<25,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain) (24.1)\n","Requirement already satisfied: typing-extensions>=4.7 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.3.0,>=0.2.27->langchain) (4.12.2)\n","Requirement already satisfied: orjson<4.0.0,>=3.9.14 in /usr/local/lib/python3.10/dist-packages (from langsmith<0.2.0,>=0.1.17->langchain) (3.10.6)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic<3,>=1->langchain) (2.20.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2024.7.4)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain) (3.0.3)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<0.3.0,>=0.2.27->langchain) (3.0.0)\n"]}]},{"cell_type":"code","source":["from langchain_experimental.agents.agent_toolkits import create_python_agent\n","from langchain_experimental.tools.python.tool import PythonREPLTool"],"metadata":{"id":"Z934CAVQwzlu","executionInfo":{"status":"ok","timestamp":1722898663868,"user_tz":-330,"elapsed":406,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":256,"outputs":[]},{"cell_type":"code","source":["# from langchain.agents.agent_toolkits import create_python_agent\n","from langchain.agents import load_tools, initialize_agent\n","from langchain.agents import AgentType\n","# from langchain.tools.python.tool import PythonREPLTool\n","from langchain.chat_models import ChatOpenAI"],"metadata":{"id":"a4HUl1Oqu6jt","executionInfo":{"status":"ok","timestamp":1722898893638,"user_tz":-330,"elapsed":510,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":267,"outputs":[]},{"cell_type":"code","source":["from langchain.python import PythonREPL"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"yccfGbcYxtaK","executionInfo":{"status":"error","timestamp":1722898898827,"user_tz":-330,"elapsed":403,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"5e4d271e-b8d8-4d3e-87b1-4830da33e44d"},"execution_count":268,"outputs":[{"output_type":"error","ename":"ImportError","evalue":"cannot import name 'PythonREPL' from 'langchain.python' (/usr/local/lib/python3.10/dist-packages/langchain/python.py)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-268-7c767a82adef>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mlangchain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mPythonREPL\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mImportError\u001b[0m: cannot import name 'PythonREPL' from 'langchain.python' (/usr/local/lib/python3.10/dist-packages/langchain/python.py)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"code","source":["!pip install -U wikipedia"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mWLSXTUExw2c","executionInfo":{"status":"ok","timestamp":1722898933307,"user_tz":-330,"elapsed":7362,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"44857f31-be84-4f5c-836b-bd1578c7c40d"},"execution_count":271,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: wikipedia in /usr/local/lib/python3.10/dist-packages (1.4.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from wikipedia) (4.12.3)\n","Requirement already satisfied: requests<3.0.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from wikipedia) (2.31.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.0.0->wikipedia) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.0.0->wikipedia) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.0.0->wikipedia) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.0.0->wikipedia) (2024.7.4)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->wikipedia) (2.5)\n"]}]},{"cell_type":"code","source":["llm = ChatOpenAI(temperature=0, model=llm_model,openai_api_key=api_key)"],"metadata":{"id":"CVmPLabOwgLe","executionInfo":{"status":"ok","timestamp":1722898871825,"user_tz":-330,"elapsed":394,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":264,"outputs":[]},{"cell_type":"code","source":["tools = load_tools([\"llm-math\",\"wikipedia\"], llm=llm)"],"metadata":{"id":"Z4_ovpTlxkGW","executionInfo":{"status":"ok","timestamp":1722898933957,"user_tz":-330,"elapsed":652,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":272,"outputs":[]},{"cell_type":"code","source":["agent= initialize_agent(\n","    tools,\n","    llm,\n","    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION,\n","    handle_parsing_errors=True,\n","    verbose = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u9EQ_57uxoge","executionInfo":{"status":"ok","timestamp":1722898933957,"user_tz":-330,"elapsed":4,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"c0ef390d-cda7-4793-b570-247b630302d6"},"execution_count":273,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/langchain_core/_api/deprecation.py:139: LangChainDeprecationWarning: The function `initialize_agent` was deprecated in LangChain 0.1.0 and will be removed in 0.3.0. Use Use new agent constructor methods like create_react_agent, create_json_agent, create_structured_chat_agent, etc. instead.\n","  warn_deprecated(\n"]}]},{"cell_type":"code","source":["agent(\"What is the 25% of 300?\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NajiK9FKxpyF","executionInfo":{"status":"ok","timestamp":1722898940436,"user_tz":-330,"elapsed":2742,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"680867a3-8f78-47b3-d97e-6010bf6b53b7"},"execution_count":274,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new AgentExecutor chain...\u001b[0m\n","\u001b[32;1m\u001b[1;3mThought: We can use a calculator to find 25% of 300.\n","Action:\n","```\n","{\n","  \"action\": \"Calculator\",\n","  \"action_input\": \"25% of 300\"\n","}\n","```\u001b[0m\n","Observation: \u001b[36;1m\u001b[1;3mAnswer: 75.0\u001b[0m\n","Thought:\u001b[32;1m\u001b[1;3mFinal Answer: 75.0\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["{'input': 'What is the 25% of 300?', 'output': '75.0'}"]},"metadata":{},"execution_count":274}]},{"cell_type":"code","source":["question = \"Tom M. Mitchell is an American computer scientist \\\n","and the Founders University Professor at Carnegie Mellon University (CMU)\\\n","what book did he write?\"\n","result = agent(question)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ossYbQAix3Sb","executionInfo":{"status":"ok","timestamp":1722898949985,"user_tz":-330,"elapsed":4098,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"9ea1ff81-5dc3-4a11-a88d-262387780fc9"},"execution_count":275,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new AgentExecutor chain...\u001b[0m\n","\u001b[32;1m\u001b[1;3mThought: I can use Wikipedia to find out which book Tom M. Mitchell wrote.\n","Action:\n","```\n","{\n","  \"action\": \"wikipedia\",\n","  \"action_input\": \"Tom M. Mitchell\"\n","}\n","```\u001b[0m"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/wikipedia/wikipedia.py:389: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n","\n","The code that caused this warning is on line 389 of the file /usr/local/lib/python3.10/dist-packages/wikipedia/wikipedia.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n","\n","  lis = BeautifulSoup(html).find_all('li')\n"]},{"output_type":"stream","name":"stdout","text":["\n","Observation: \u001b[33;1m\u001b[1;3mPage: Tom M. Mitchell\n","Summary: Tom Michael Mitchell (born August 9, 1951) is an American computer scientist and the Founders University Professor at Carnegie Mellon University (CMU). He is a founder and former Chair of the Machine Learning Department at CMU. Mitchell is known for his contributions to the advancement of machine learning, artificial intelligence, and cognitive neuroscience and is the author of the textbook Machine Learning. He is a member of the United States National Academy of Engineering since 2010. He is also a Fellow of the American Academy of Arts and Sciences, the American Association for the Advancement of Science and a Fellow and past President of the Association for the Advancement of Artificial Intelligence. In October 2018, Mitchell was appointed as the Interim Dean of the School of Computer Science at Carnegie Mellon.\n","\n","Page: Ensemble learning\n","Summary: In statistics and machine learning, ensemble methods use multiple learning algorithms to obtain better predictive performance than could be obtained from any of the constituent learning algorithms alone.\n","Unlike a statistical ensemble in statistical mechanics, which is usually infinite, a machine learning ensemble consists of only a concrete finite set of alternative models, but typically allows for much more flexible structure to exist among those alternatives.\u001b[0m\n","Thought:\u001b[32;1m\u001b[1;3mI can see that Tom M. Mitchell wrote the textbook \"Machine Learning.\"\n","\n","Final Answer: The book that Tom M. Mitchell wrote is \"Machine Learning.\"\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]}]},{"cell_type":"markdown","source":["### Python Agent"],"metadata":{"id":"eU-wnSMnx7LK"}},{"cell_type":"code","source":["agent = create_python_agent(\n","    llm,\n","    tool=PythonREPLTool(),\n","    verbose=True\n",")"],"metadata":{"id":"62V5Su-px5Tr","executionInfo":{"status":"ok","timestamp":1722898967795,"user_tz":-330,"elapsed":420,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":276,"outputs":[]},{"cell_type":"code","source":["customer_list = [[\"Harrison\", \"Chase\"],\n","                 [\"Lang\", \"Chain\"],\n","                 [\"Dolly\", \"Too\"],\n","                 [\"Elle\", \"Elem\"],\n","                 [\"Geoff\",\"Fusion\"],\n","                 [\"Trance\",\"Former\"],\n","                 [\"Jen\",\"Ayai\"]\n","                ]"],"metadata":{"id":"zQy7bw9bx-jZ","executionInfo":{"status":"ok","timestamp":1722898972717,"user_tz":-330,"elapsed":507,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":277,"outputs":[]},{"cell_type":"code","source":["agent.run(f\"\"\"Sort these customers by \\\n","last name and then first name \\\n","and print the output: {customer_list}\"\"\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":333},"id":"pAXV3zvrx_ts","executionInfo":{"status":"ok","timestamp":1722898980579,"user_tz":-330,"elapsed":3437,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"913fff22-a8d1-4169-80d3-8b319829e4f7"},"execution_count":278,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new AgentExecutor chain...\u001b[0m\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:langchain_experimental.utilities.python:Python REPL can execute arbitrary code. Use with caution.\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[32;1m\u001b[1;3mWe can use the `sorted()` function in Python to sort the list of customers based on last name first and then first name.\n","Action: Python_REPL\n","Action Input: customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\n","sorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\n","print(sorted_customers)\u001b[0m\n","Observation: \u001b[36;1m\u001b[1;3m[['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\n","\u001b[0m\n","Thought:\u001b[32;1m\u001b[1;3mI now know the final answer\n","Final Answer: [['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]},{"output_type":"execute_result","data":{"text/plain":["\"[['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":278}]},{"cell_type":"code","source":["import langchain\n","langchain.debug=True\n","agent.run(f\"\"\"Sort these customers by \\\n","last name and then first name \\\n","and print the output: {customer_list}\"\"\")\n","langchain.debug=False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HZbbDSWCyA8G","executionInfo":{"status":"ok","timestamp":1722898986196,"user_tz":-330,"elapsed":3007,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"9576e78b-da26-4d12-bbb1-f23d60a77778"},"execution_count":279,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[32;1m\u001b[1;3m[chain/start]\u001b[0m \u001b[1m[chain:AgentExecutor] Entering Chain run with input:\n","\u001b[0m{\n","  \"input\": \"Sort these customers by last name and then first name and print the output: [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\"\n","}\n","\u001b[32;1m\u001b[1;3m[chain/start]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain] Entering Chain run with input:\n","\u001b[0m{\n","  \"input\": \"Sort these customers by last name and then first name and print the output: [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\",\n","  \"agent_scratchpad\": \"\",\n","  \"stop\": [\n","    \"\\nObservation:\",\n","    \"\\n\\tObservation:\"\n","  ]\n","}\n","\u001b[32;1m\u001b[1;3m[llm/start]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain > llm:ChatOpenAI] Entering LLM run with input:\n","\u001b[0m{\n","  \"prompts\": [\n","    \"Human: You are an agent designed to write and execute python code to answer questions.\\nYou have access to a python REPL, which you can use to execute python code.\\nIf you get an error, debug your code and try again.\\nOnly use the output of your code to answer the question. \\nYou might know the answer without running any code, but you should still run the code to get the answer.\\nIf it does not seem like you can write code to answer the question, just return \\\"I don't know\\\" as the answer.\\n\\n\\nPython_REPL - A Python shell. Use this to execute python commands. Input should be a valid python command. If you want to see the output of a value, you should print it out with `print(...)`.\\n\\nUse the following format:\\n\\nQuestion: the input question you must answer\\nThought: you should always think about what to do\\nAction: the action to take, should be one of [Python_REPL]\\nAction Input: the input to the action\\nObservation: the result of the action\\n... (this Thought/Action/Action Input/Observation can repeat N times)\\nThought: I now know the final answer\\nFinal Answer: the final answer to the original input question\\n\\nBegin!\\n\\nQuestion: Sort these customers by last name and then first name and print the output: [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nThought:\"\n","  ]\n","}\n","\u001b[36;1m\u001b[1;3m[llm/end]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain > llm:ChatOpenAI] [1.29s] Exiting LLM run with output:\n","\u001b[0m{\n","  \"generations\": [\n","    [\n","      {\n","        \"text\": \"We can use the `sorted()` function in Python to sort the list of customers based on last name first and then first name.\\nAction: Python_REPL\\nAction Input: customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nsorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\\nprint(sorted_customers)\",\n","        \"generation_info\": {\n","          \"finish_reason\": \"stop\",\n","          \"logprobs\": null\n","        },\n","        \"type\": \"ChatGeneration\",\n","        \"message\": {\n","          \"lc\": 1,\n","          \"type\": \"constructor\",\n","          \"id\": [\n","            \"langchain\",\n","            \"schema\",\n","            \"messages\",\n","            \"AIMessage\"\n","          ],\n","          \"kwargs\": {\n","            \"content\": \"We can use the `sorted()` function in Python to sort the list of customers based on last name first and then first name.\\nAction: Python_REPL\\nAction Input: customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nsorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\\nprint(sorted_customers)\",\n","            \"response_metadata\": {\n","              \"token_usage\": {\n","                \"completion_tokens\": 114,\n","                \"prompt_tokens\": 328,\n","                \"total_tokens\": 442\n","              },\n","              \"model_name\": \"gpt-3.5-turbo\",\n","              \"system_fingerprint\": null,\n","              \"finish_reason\": \"stop\",\n","              \"logprobs\": null\n","            },\n","            \"type\": \"ai\",\n","            \"id\": \"run-68b5742a-a092-47d1-9d61-a21677d671da-0\",\n","            \"tool_calls\": [],\n","            \"invalid_tool_calls\": []\n","          }\n","        }\n","      }\n","    ]\n","  ],\n","  \"llm_output\": {\n","    \"token_usage\": {\n","      \"completion_tokens\": 114,\n","      \"prompt_tokens\": 328,\n","      \"total_tokens\": 442\n","    },\n","    \"model_name\": \"gpt-3.5-turbo\",\n","    \"system_fingerprint\": null\n","  },\n","  \"run\": null\n","}\n","\u001b[36;1m\u001b[1;3m[chain/end]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain] [1.30s] Exiting Chain run with output:\n","\u001b[0m{\n","  \"text\": \"We can use the `sorted()` function in Python to sort the list of customers based on last name first and then first name.\\nAction: Python_REPL\\nAction Input: customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nsorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\\nprint(sorted_customers)\"\n","}\n","\u001b[32;1m\u001b[1;3m[tool/start]\u001b[0m \u001b[1m[chain:AgentExecutor > tool:Python_REPL] Entering Tool run with input:\n","\u001b[0m\"customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\n","sorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\n","print(sorted_customers)\"\n","\u001b[36;1m\u001b[1;3m[tool/end]\u001b[0m \u001b[1m[chain:AgentExecutor > tool:Python_REPL] [3ms] Exiting Tool run with output:\n","\u001b[0m\"[['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\"\n","\u001b[32;1m\u001b[1;3m[chain/start]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain] Entering Chain run with input:\n","\u001b[0m{\n","  \"input\": \"Sort these customers by last name and then first name and print the output: [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\",\n","  \"agent_scratchpad\": \"We can use the `sorted()` function in Python to sort the list of customers based on last name first and then first name.\\nAction: Python_REPL\\nAction Input: customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nsorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\\nprint(sorted_customers)\\nObservation: [['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\\n\\nThought:\",\n","  \"stop\": [\n","    \"\\nObservation:\",\n","    \"\\n\\tObservation:\"\n","  ]\n","}\n","\u001b[32;1m\u001b[1;3m[llm/start]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain > llm:ChatOpenAI] Entering LLM run with input:\n","\u001b[0m{\n","  \"prompts\": [\n","    \"Human: You are an agent designed to write and execute python code to answer questions.\\nYou have access to a python REPL, which you can use to execute python code.\\nIf you get an error, debug your code and try again.\\nOnly use the output of your code to answer the question. \\nYou might know the answer without running any code, but you should still run the code to get the answer.\\nIf it does not seem like you can write code to answer the question, just return \\\"I don't know\\\" as the answer.\\n\\n\\nPython_REPL - A Python shell. Use this to execute python commands. Input should be a valid python command. If you want to see the output of a value, you should print it out with `print(...)`.\\n\\nUse the following format:\\n\\nQuestion: the input question you must answer\\nThought: you should always think about what to do\\nAction: the action to take, should be one of [Python_REPL]\\nAction Input: the input to the action\\nObservation: the result of the action\\n... (this Thought/Action/Action Input/Observation can repeat N times)\\nThought: I now know the final answer\\nFinal Answer: the final answer to the original input question\\n\\nBegin!\\n\\nQuestion: Sort these customers by last name and then first name and print the output: [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nThought:We can use the `sorted()` function in Python to sort the list of customers based on last name first and then first name.\\nAction: Python_REPL\\nAction Input: customers = [['Harrison', 'Chase'], ['Lang', 'Chain'], ['Dolly', 'Too'], ['Elle', 'Elem'], ['Geoff', 'Fusion'], ['Trance', 'Former'], ['Jen', 'Ayai']]\\nsorted_customers = sorted(customers, key=lambda x: (x[1], x[0]))\\nprint(sorted_customers)\\nObservation: [['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\\n\\nThought:\"\n","  ]\n","}\n","\u001b[36;1m\u001b[1;3m[llm/end]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain > llm:ChatOpenAI] [1.04s] Exiting LLM run with output:\n","\u001b[0m{\n","  \"generations\": [\n","    [\n","      {\n","        \"text\": \"The customers are now sorted by last name and then first name.\\nFinal Answer: [['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\",\n","        \"generation_info\": {\n","          \"finish_reason\": \"stop\",\n","          \"logprobs\": null\n","        },\n","        \"type\": \"ChatGeneration\",\n","        \"message\": {\n","          \"lc\": 1,\n","          \"type\": \"constructor\",\n","          \"id\": [\n","            \"langchain\",\n","            \"schema\",\n","            \"messages\",\n","            \"AIMessage\"\n","          ],\n","          \"kwargs\": {\n","            \"content\": \"The customers are now sorted by last name and then first name.\\nFinal Answer: [['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\",\n","            \"response_metadata\": {\n","              \"token_usage\": {\n","                \"completion_tokens\": 67,\n","                \"prompt_tokens\": 499,\n","                \"total_tokens\": 566\n","              },\n","              \"model_name\": \"gpt-3.5-turbo\",\n","              \"system_fingerprint\": null,\n","              \"finish_reason\": \"stop\",\n","              \"logprobs\": null\n","            },\n","            \"type\": \"ai\",\n","            \"id\": \"run-30bb0de7-0897-46cb-abf3-08a50c10c85a-0\",\n","            \"tool_calls\": [],\n","            \"invalid_tool_calls\": []\n","          }\n","        }\n","      }\n","    ]\n","  ],\n","  \"llm_output\": {\n","    \"token_usage\": {\n","      \"completion_tokens\": 67,\n","      \"prompt_tokens\": 499,\n","      \"total_tokens\": 566\n","    },\n","    \"model_name\": \"gpt-3.5-turbo\",\n","    \"system_fingerprint\": null\n","  },\n","  \"run\": null\n","}\n","\u001b[36;1m\u001b[1;3m[chain/end]\u001b[0m \u001b[1m[chain:AgentExecutor > chain:LLMChain] [1.04s] Exiting Chain run with output:\n","\u001b[0m{\n","  \"text\": \"The customers are now sorted by last name and then first name.\\nFinal Answer: [['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\"\n","}\n","\u001b[36;1m\u001b[1;3m[chain/end]\u001b[0m \u001b[1m[chain:AgentExecutor] [2.37s] Exiting Chain run with output:\n","\u001b[0m{\n","  \"output\": \"[['Jen', 'Ayai'], ['Lang', 'Chain'], ['Harrison', 'Chase'], ['Elle', 'Elem'], ['Trance', 'Former'], ['Geoff', 'Fusion'], ['Dolly', 'Too']]\"\n","}\n"]}]},{"cell_type":"markdown","source":["### Define your own tool"],"metadata":{"id":"MOz1-yfJyFEf"}},{"cell_type":"code","source":["!pip install DateTime"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZlBaToNmyCaI","executionInfo":{"status":"ok","timestamp":1722899013754,"user_tz":-330,"elapsed":6758,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"334f4baa-2e94-4929-daca-95a05283fd6b"},"execution_count":280,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting DateTime\n","  Downloading DateTime-5.5-py3-none-any.whl.metadata (33 kB)\n","Collecting zope.interface (from DateTime)\n","  Downloading zope.interface-6.4.post2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (42 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m42.9/42.9 kB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pytz in /usr/local/lib/python3.10/dist-packages (from DateTime) (2024.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from zope.interface->DateTime) (71.0.4)\n","Downloading DateTime-5.5-py3-none-any.whl (52 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m52.6/52.6 kB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading zope.interface-6.4.post2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (247 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m247.8/247.8 kB\u001b[0m \u001b[31m15.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: zope.interface, DateTime\n","Successfully installed DateTime-5.5 zope.interface-6.4.post2\n"]}]},{"cell_type":"code","source":["from langchain.agents import tool\n","from datetime import date"],"metadata":{"id":"aCJMO-OfyIOi","executionInfo":{"status":"ok","timestamp":1722899013754,"user_tz":-330,"elapsed":1,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":281,"outputs":[]},{"cell_type":"code","source":["@tool\n","def time(text: str) -> str:\n","    \"\"\"Returns todays date, use this for any \\\n","    questions related to knowing todays date. \\\n","    The input should always be an empty string, \\\n","    and this function will always return todays \\\n","    date - any date mathmatics should occur \\\n","    outside this function.\"\"\"\n","    return str(date.today())"],"metadata":{"id":"UnhGADQHyJnF","executionInfo":{"status":"ok","timestamp":1722899018389,"user_tz":-330,"elapsed":422,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":282,"outputs":[]},{"cell_type":"code","source":["agent= initialize_agent(\n","    tools + [time],\n","    llm,\n","    agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION,\n","    handle_parsing_errors=True,\n","    verbose = True)"],"metadata":{"id":"QihJ8-4hyK53","executionInfo":{"status":"ok","timestamp":1722899028219,"user_tz":-330,"elapsed":400,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}}},"execution_count":283,"outputs":[]},{"cell_type":"code","source":["try:\n","    result = agent(\"whats the date today?\")\n","except:\n","    print(\"exception on external access\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xAB43wmbyNTq","executionInfo":{"status":"ok","timestamp":1722899044512,"user_tz":-330,"elapsed":2729,"user":{"displayName":"Shashwat Gupta","userId":"16181008116392135827"}},"outputId":"8cbb51d7-d490-4be6-f498-b522ad272dbe"},"execution_count":284,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","\u001b[1m> Entering new AgentExecutor chain...\u001b[0m\n","\u001b[32;1m\u001b[1;3mThought: I should use the `time` tool to find out today's date.\n","Action:\n","```\n","{\n","  \"action\": \"time\",\n","  \"action_input\": \"\"\n","}\n","```\n","\u001b[0m\n","Observation: \u001b[38;5;200m\u001b[1;3m2024-08-05\u001b[0m\n","Thought:\u001b[32;1m\u001b[1;3mCould not parse LLM output: Final Answer\u001b[0m\n","Observation: Invalid or incomplete response\n","Thought:\u001b[32;1m\u001b[1;3mI will correct the previous action to get today's date correctly.\n","Action:\n","```\n","{\n","  \"action\": \"time\",\n","  \"action_input\": \"\"\n","}\n","``` \n","Final Answer: 2024-08-05\u001b[0m\n","\n","\u001b[1m> Finished chain.\u001b[0m\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"sHGImdJFyQsv"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1QGMxdI4sU1QbgL2LYbu24Qj9BPcz6kb0","timestamp":1722782790204}],"collapsed_sections":["u7Wvu7El3zCD","mz5p098GOIun","RCCYR-MCULhy"],"authorship_tag":"ABX9TyN2Z2bCQLkdThHuuPOAefw1"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}